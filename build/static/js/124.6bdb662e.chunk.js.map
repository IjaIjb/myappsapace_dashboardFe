{"version":3,"file":"static/js/124.6bdb662e.chunk.js","mappings":"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","sources":["pages/auth/Login.tsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport LoadingSpinner from \"../../components/UI/LoadingSpinner\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserApis } from \"../../apis/userApi/userApi\";\r\n// import { AxiosResponse } from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { login } from \"../../reducer/loginSlice\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nconst images = [\r\n  \"/images/auth/authImage1.svg\",\r\n  \"/images/auth/authImage2.svg\",\r\n  \"/images/auth/authImage3.svg\",\r\n]; // Add more images as needed\r\n\r\nconst Login = () => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n    }, 3000); // Change image every 3 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const dispatch: Dispatch = useDispatch();\r\n\r\n  const initialData = {\r\n    login: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validation = Yup.object({\r\n    login: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Password must be at least 6 characters\")\r\n      .required(\"Required\"),\r\n  });\r\n\r\n  const onSubmit = async (\r\n    values: { login: string; password: string },\r\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\r\n  ) => {\r\n    try {\r\n      const data = JSON.stringify({\r\n        login: values.login,\r\n        password: values.password,\r\n      });\r\n  \r\n      const response: any = await UserApis.login(data);\r\n      // console.log(response)\r\n  \r\n      if (response?.data) {\r\n        console.log(response)\r\n        if (response?.data?.status === true) {\r\n          console.log(response.data.data.token)\r\n          console.log(response.data.data.token.access_token)\r\n          dispatch(\r\n            login({\r\n              login: values.login,\r\n              token: response.data.data.token.access_token,\r\n              id: response.data.data.id,\r\n              data: response?.data.data.user,\r\n            })\r\n          );\r\n  \r\n          toast.success(response?.data?.message);\r\n          navigate(\"/dashboard/home\");\r\n          // window.scrollTo(0, 0); // Scroll to top\r\n        } else {\r\n        console.log(response)\r\n\r\n          toast.error(\"Invalid Login Credentials\");\r\n        }\r\n      } else if (response === \"Unauthorized\") {\r\n      // toast.error(response);\r\n      dispatch(\r\n        login({\r\n          email: values.login,\r\n          // token: response.data.data.token.access_token,\r\n          // id: response.data.data.id,\r\n          // data: response?.data.data.user,\r\n        })\r\n      );\r\n      navigate(\"/auth/verify-email\");\r\n\r\n      } else {\r\n        toast.error(response);\r\n  \r\n        }\r\n    } catch (error:any) {\r\n      console.error(\"Error during login:\", error);\r\n      toast.error(\"An error occurred. Please try again.\");\r\n    } \r\n  };\r\n  \r\n\r\n  // const onSubmit = async () => {\r\n  //   console.log(\"hhh\");\r\n  //   navigate(\"/auth/verify-email\");\r\n\r\n  //   window.scrollTo(0, 0); // Scroll to top\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-8\">\r\n        <div className=\"grid md:grid-cols-2 \">\r\n          {/* <div className=\"h-screen md:block hidden \">\r\n            <img\r\n              src=\"/images/auth/authImage1.svg\"\r\n              className=\"h-screen\"\r\n              alt=\"mart Logo\"\r\n            />\r\n          </div> */}\r\n              <div className=\"h-screen md:block hidden relative overflow-hidden\">\r\n      <AnimatePresence>\r\n        <motion.img\r\n          key={images[index]} // Ensure smooth transition\r\n          src={images[index]}\r\n          alt=\"Auth Image\"\r\n          className=\"h-screen absolute top-0 left-0\"\r\n          initial={{ opacity: 0, scale: 1.1 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          exit={{ opacity: 0, scale: 1.1 }}\r\n          transition={{ duration: 1 }}\r\n        />\r\n      </AnimatePresence>\r\n    </div>\r\n\r\n          <div className=\"md:block flex \">\r\n            <div className=\" pt-10  px-5\">\r\n              <div className=\"\">\r\n\r\n              <a href=\"https://myappspace.net/\" rel=\"noreferrer\" target=\"_blank\">\r\n            <img\r\n              src=\"/images/auth/MyAppspace (3).png\"\r\n              className=\"w-[170px] h-full\"\r\n              alt=\"Logo\"\r\n            />\r\n            </a>\r\n                \r\n                <div className=\" mt-7 \">\r\n                  <h5 className=\"text-[#000000] text-[16px] font-[600] \">\r\n                    Personal Information\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-col max-w-[570px] mt-2 gap-3\">\r\n                <Formik\r\n                  initialValues={initialData}\r\n                  validationSchema={validation}\r\n                  onSubmit={onSubmit}\r\n                >\r\n                  {({ isSubmitting, setFieldValue }) => (\r\n                    <Form className=\"w-full  mb-6 flex flex-col justify-between\">\r\n                      <div className=\"\">\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-5 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"login\"\r\n                            >\r\n                              Email Address\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"login\"\r\n                              type=\"login\"\r\n                              id=\"login\"\r\n                              placeholder=\"\"\r\n                        \r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"login\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"password\"\r\n                            >\r\n                              Password\r\n                            </label>\r\n                            <div>\r\n                              <Field\r\n                                className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                              type={!showPassword ? \"password\" : \"text\"}\r\n                                placeholder=\"\"\r\n                              />\r\n                              <button\r\n                                type=\"button\"\r\n                                // role=\"button\"\r\n                                aria-label=\"show password\"\r\n                                title=\" show password\"\r\n                                onClick={() =>\r\n                                  setShowPassword(() => !showPassword)\r\n                                }\r\n                                className={`absolute right-4 top-[40px]`}\r\n                              >\r\n                                {!showPassword ? (\r\n                                  <AiOutlineEyeInvisible className=\"\" />\r\n                                ) : (\r\n                                  <AiOutlineEye className=\"\" />\r\n                                )}\r\n                              </button>\r\n                            </div>\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"password\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <p className=\"flex items-center justify-center gap-x-1 text-[#1A1A1A] text-[16px] md:text-[18px] font-normal\">\r\n                          Don&apos;t have an account yet?\r\n                          <Link\r\n                            to=\"/auth/signup\"\r\n                            className=\"text-secondary underline font-bold hover:underline\"\r\n                          >\r\n                            Register Here\r\n                          </Link>\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className=\"flex justify-end items-end mt-3 h-full\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          // onClick={onSubmit}\r\n                          disabled={isSubmitting} // Disable button if no option is selected\r\n                          className={`disabled:bg-gray-500  flex gap-2 items-center py-2 w-fit px-6 bg-secondary text-white rounded-full  hover:bg-secondary/[70%]\r\n}`}\r\n                        >\r\n                          {isSubmitting ? <LoadingSpinner /> : \"Proceed\"}\r\n                          {!isSubmitting && <FaArrowRight />}\r\n                        </button>\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n              <p className=\"text-center text-sm text-[#1A1A1A] mt-4\">\r\n  By signing up, you agree to our\r\n  <a href=\"https://myappspace.net/terms-and-condition\"  rel=\"noopener noreferrer\" target=\"_blank\" className=\"text-secondary underline font-bold hover:underline mx-1\">\r\n    Terms & Conditions\r\n  </a>\r\n  and\r\n  <a href=\"https://myappspace.net/privacy-policy\"  rel=\"noopener noreferrer\" target=\"_blank\"  className=\"text-secondary underline font-bold hover:underline mx-1\">\r\n    Privacy Policy\r\n  </a>.\r\n</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n              <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n              />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["images","Login","index","setIndex","useState","useEffect","interval","setInterval","prevIndex","length","clearInterval","showPassword","setShowPassword","navigate","useNavigate","dispatch","useDispatch","validation","Yup","login","email","required","password","min","_jsx","children","_jsxs","className","AnimatePresence","motion","img","src","alt","initial","opacity","scale","animate","exit","transition","duration","href","rel","target","Formik","initialValues","validationSchema","onSubmit","async","values","_ref","setSubmitting","data","JSON","stringify","response","UserApis","_response$data","_response$data2","console","log","status","token","access_token","id","user","toast","success","message","error","_ref2","isSubmitting","setFieldValue","Form","htmlFor","Field","name","type","placeholder","ErrorMessage","title","onClick","AiOutlineEye","AiOutlineEyeInvisible","Link","to","disabled","LoadingSpinner","FaArrowRight","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}