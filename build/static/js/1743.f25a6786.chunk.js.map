{"version":3,"file":"static/js/1743.f25a6786.chunk.js","mappings":"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","sources":["components/UI/LoadingSpinner.tsx","pages/auth/Login.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst LoadingSpinner = (props: Props) => {\r\n  return (\r\n    <svg\r\n      role=\"status\"\r\n      className=\"inline w-5 h-5 mr-2 text-gray-200 animate-spin  fill-gray-600 \"\r\n      viewBox=\"0 0 100 101\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n        fill=\"currentFill\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport LoadingSpinner from \"../../components/UI/LoadingSpinner\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserApis } from \"../../apis/userApi/userApi\";\r\n// import { AxiosResponse } from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { login } from \"../../reducer/loginSlice\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nconst images = [\r\n  \"/images/auth/authImage1.svg\",\r\n  \"/images/auth/authImage2.svg\",\r\n  \"/images/auth/authImage3.svg\",\r\n]; // Add more images as needed\r\n\r\nconst Login = () => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n    }, 3000); // Change image every 3 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const dispatch: Dispatch = useDispatch();\r\n\r\n  const initialData = {\r\n    login: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validation = Yup.object({\r\n    login: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Password must be at least 6 characters\")\r\n      .required(\"Required\"),\r\n  });\r\n\r\n  const onSubmit = async (\r\n    values: { login: string; password: string },\r\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\r\n  ) => {\r\n    try {\r\n      const data = JSON.stringify({\r\n        login: values.login,\r\n        password: values.password,\r\n      });\r\n  \r\n      const response: any = await UserApis.login(data);\r\n      // console.log(response)\r\n  \r\n      if (response?.data) {\r\n        // console.log(response)\r\n        if (response?.data?.status === true) {\r\n          // console.log(response.data.data.token)\r\n          // console.log(response.data.data.token.access_token)\r\n          const accessToken = response.data.data.token.access_token;\r\n          dispatch(\r\n            login({\r\n              login: values.login,\r\n              token: response.data.data.token.access_token,\r\n              id: response.data.data.id,\r\n              data: response?.data.data.user,\r\n            })\r\n          );\r\n        // âœ… Store token in localStorage to persist login\r\n        localStorage.setItem(\"token\", accessToken);\r\n      localStorage.removeItem(\"selectedStore\");\r\n\r\n          toast.success(response?.data?.message);\r\n          navigate(\"/dashboard/home\");\r\n          // window.scrollTo(0, 0); // Scroll to top\r\n        } else {\r\n        // console.log(response)\r\n\r\n          toast.error(\"Invalid Login Credentials\");\r\n        }\r\n      } else if (response === \"Unauthorized\") {\r\n      // toast.error(response);\r\n      dispatch(\r\n        login({\r\n          email: values.login,\r\n          // token: response.data.data.token.access_token,\r\n          // id: response.data.data.id,\r\n          // data: response?.data.data.user,\r\n        })\r\n      );\r\n      navigate(\"/auth/verify-email\");\r\n\r\n      } else {\r\n        toast.error(response);\r\n  \r\n        }\r\n    } catch (error:any) {\r\n      console.error(\"Error during login:\", error);\r\n      toast.error(\"An error occurred. Please try again.\");\r\n    } \r\n  };\r\n  \r\n\r\n  // const onSubmit = async () => {\r\n  //   console.log(\"hhh\");\r\n  //   navigate(\"/auth/verify-email\");\r\n\r\n  //   window.scrollTo(0, 0); // Scroll to top\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-8\">\r\n        <div className=\"grid md:grid-cols-2 \">\r\n          {/* <div className=\"h-screen md:block hidden \">\r\n            <img\r\n              src=\"/images/auth/authImage1.svg\"\r\n              className=\"h-screen\"\r\n              alt=\"mart Logo\"\r\n            />\r\n          </div> */}\r\n              <div className=\"h-screen md:block hidden relative overflow-hidden\">\r\n      <AnimatePresence>\r\n        <motion.img\r\n          key={images[index]} // Ensure smooth transition\r\n          src={images[index]}\r\n          alt=\"Auth Image\"\r\n          className=\"h-screen absolute top-0 left-0\"\r\n          initial={{ opacity: 0, scale: 1.1 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          exit={{ opacity: 0, scale: 1.1 }}\r\n          transition={{ duration: 1 }}\r\n        />\r\n      </AnimatePresence>\r\n    </div>\r\n\r\n          <div className=\"md:block flex \">\r\n            <div className=\" pt-10  px-5\">\r\n              <div className=\"\">\r\n\r\n              <a href=\"https://myappspace.net/\" rel=\"noreferrer\" target=\"_blank\">\r\n            <img\r\n              src=\"/images/auth/MyAppspace (3).png\"\r\n              className=\"w-[170px] h-full\"\r\n              alt=\"Logo\"\r\n            />\r\n            </a>\r\n                \r\n                <div className=\" mt-7 \">\r\n                  <h5 className=\"text-[#000000] text-[16px] font-[600] \">\r\n                    Personal Information\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-col max-w-[570px] mt-2 gap-3\">\r\n                <Formik\r\n                  initialValues={initialData}\r\n                  validationSchema={validation}\r\n                  onSubmit={onSubmit}\r\n                >\r\n                  {({ isSubmitting, setFieldValue }) => (\r\n                    <Form className=\"w-full  mb-6 flex flex-col justify-between\">\r\n                      <div className=\"\">\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-5 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"login\"\r\n                            >\r\n                              Email Address\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"login\"\r\n                              type=\"login\"\r\n                              id=\"login\"\r\n                              placeholder=\"\"\r\n                        \r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"login\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"password\"\r\n                            >\r\n                              Password\r\n                            </label>\r\n                            <div>\r\n                              <Field\r\n                                className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                              type={!showPassword ? \"password\" : \"text\"}\r\n                                placeholder=\"\"\r\n                              />\r\n                              <button\r\n                                type=\"button\"\r\n                                // role=\"button\"\r\n                                aria-label=\"show password\"\r\n                                title=\" show password\"\r\n                                onClick={() =>\r\n                                  setShowPassword(() => !showPassword)\r\n                                }\r\n                                className={`absolute right-4 top-[40px]`}\r\n                              >\r\n                                {!showPassword ? (\r\n                                  <AiOutlineEyeInvisible className=\"\" />\r\n                                ) : (\r\n                                  <AiOutlineEye className=\"\" />\r\n                                )}\r\n                              </button>\r\n                            </div>\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"password\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n<div className=\"flex justify-end\">\r\n<Link to={\"/forgot-password\"} className=\"mt-1 text-right\">\r\n                    <p className=\"text-[#000] text-sm font-semibold\">Forgot Password?</p>\r\n                  </Link>\r\n</div>\r\n                        <p className=\"flex items-center justify-center gap-x-1 text-[#1A1A1A] text-[16px] md:text-[18px] font-normal\">\r\n                          Don&apos;t have an account yet?\r\n                          <Link\r\n                            to=\"/auth/signup\"\r\n                            className=\"text-secondary underline font-bold hover:underline\"\r\n                          >\r\n                            Register Here\r\n                          </Link>\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className=\"flex justify-end items-end mt-3 h-full\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          // onClick={onSubmit}\r\n                          disabled={isSubmitting} // Disable button if no option is selected\r\n                          className={`disabled:bg-gray-500  flex gap-2 items-center py-2 w-fit px-6 bg-secondary text-white rounded-full  hover:bg-secondary/[70%]\r\n}`}\r\n                        >\r\n                          {isSubmitting ? <LoadingSpinner /> : \"Proceed\"}\r\n                          {!isSubmitting && <FaArrowRight />}\r\n                        </button>\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n              <p className=\"text-center text-sm text-[#1A1A1A] mt-4\">\r\n  By signing up, you agree to our\r\n  <a href=\"https://myappspace.net/terms-and-condition\"  rel=\"noopener noreferrer\" target=\"_blank\" className=\"text-secondary underline font-bold hover:underline mx-1\">\r\n    Terms & Conditions\r\n  </a>\r\n  and\r\n  <a href=\"https://myappspace.net/privacy-policy\"  rel=\"noopener noreferrer\" target=\"_blank\"  className=\"text-secondary underline font-bold hover:underline mx-1\">\r\n    Privacy Policy\r\n  </a>.\r\n</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n              <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n              />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["props","_jsxs","role","className","viewBox","fill","xmlns","children","_jsx","d","images","Login","index","setIndex","useState","useEffect","interval","setInterval","prevIndex","length","clearInterval","showPassword","setShowPassword","navigate","useNavigate","dispatch","useDispatch","validation","Yup","login","email","required","password","min","AnimatePresence","motion","img","src","alt","initial","opacity","scale","animate","exit","transition","duration","href","rel","target","Formik","initialValues","validationSchema","onSubmit","async","values","_ref","setSubmitting","data","JSON","stringify","response","UserApis","_response$data","status","_response$data2","accessToken","token","access_token","id","user","localStorage","setItem","removeItem","toast","success","message","error","console","_ref2","isSubmitting","setFieldValue","Form","htmlFor","Field","name","type","placeholder","ErrorMessage","title","onClick","AiOutlineEye","AiOutlineEyeInvisible","Link","to","disabled","LoadingSpinner","FaArrowRight","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}