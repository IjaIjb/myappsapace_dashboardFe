{"version":3,"file":"static/js/732.4308df5d.chunk.js","mappings":"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","sources":["configs.ts","apis/shared/axios.ts","apis/userApi/userApi.ts","apis/live/userLive/userLiveApis.ts","components/UI/LoadingSpinner.tsx","pages/auth/AddStore.tsx"],"sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\n//API CALL TYPE\r\n//const TYPE_LOCAL = \"LOCAL\";\r\nconst TYPE_REST = \"REST\";\r\n//console.log(77, process.env.NODE_ENV);\r\n\r\n//resources\r\n// const API_URL =\r\n//   process.env.NODE_ENV === \"production\" ? \"\" : \"https://dev.senshost.net/api\";\r\n//const API_URL = \"http://senshost.com:8015/api\";\r\nconst SOCKET_URL = \"mqtt://senshost.com\";\r\n//API contexts\r\n//We will pass this to swagger class constractor if we need different base urls\r\n//const DEFAULT = \"\";\r\n//const SECONDARY = \"/something\";\r\n\r\nexport enum APILIST {\r\n  LOGIN = \"auth/login\",\r\n  REGISTER = \"auth/register\",\r\n  HOSTELS = \"hostels\",\r\n  GET_HOSTEL = \"get-hostel\",\r\n  GET_ALL_HOSTEL = \"get-all-hostel\",\r\n  GET_ALL_USERS = \"get-all-users\"\r\n}\r\n\r\n//CONFIG DATA (Please change here only)\r\nconst configs = {\r\n  delay: 500,\r\n  dashbordRefreshRate: 1,\r\n  port: 8015,\r\n  appName: \"senhost\",\r\n  toastDelay: 5000,\r\n  tokenStorage: \"TOKEN_PERSIST\",\r\n  socket: SOCKET_URL,\r\n  type: TYPE_REST,\r\n\r\n\r\n//   imageUrl: \"http://127.0.0.1:8000/products/\",\r\n//   context: \"http://127.0.0.1:8000/api\",\r\n//   baseRedirectFront:'http://localhost:3000/',\r\n//   baseRedirect:'http://127.0.0.1:8000',\r\n\r\n\r\n  contextCustomer: \"https://api.myappspace.net/v1/customer\",\r\n  contextUser: \"https://api.myappspace.net/v1/user\",\r\n  contextAdmin: \"https://api.myappspace.net/v1/admin\",\r\n\r\n  history: createBrowserHistory(),\r\n  requestTimeOut: 30000,\r\n  apiList: APILIST,\r\n  tablePageSize: 10,\r\n};\r\nexport default configs;\r\n","import Axios, { AxiosInstance, AxiosError, AxiosResponse } from \"axios\";\r\nimport configs from '../../configs';\r\nimport { History } from 'history';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { AppRoutes } from '../../enums/routes';\r\n\r\nimport { store } from \"../../store/store\";\r\n// import { type } from \"os\";\r\n// import { toggleNotification, signoutUser } from '../../actions';\r\n// import { AuthState } from \"../../interfaces/states\";\r\n\r\n\r\nexport class AxiosGlobal {\r\n    private _requestType: string\r\n    public axios: AxiosInstance;\r\n    private history: History;\r\n\r\n    toJSON(strOrObject: string | object): object {\r\n        if (typeof strOrObject === \"object\") {\r\n            return strOrObject;\r\n        } else if (typeof strOrObject === \"string\") {\r\n            return this.toJSON(JSON.parse(strOrObject));\r\n        } else {\r\n            return strOrObject;\r\n        }\r\n    }\r\n\r\n    get requestType() {\r\n        return this._requestType;\r\n    }\r\n\r\n    set requestType(type: string) {\r\n        this._requestType = type;\r\n        this.axios.defaults.headers.common[\"Content-Type\"] = type;\r\n    }\r\n\r\n    constructor() {\r\n        this._requestType = '';\r\n         const tokenObj =  store.getState().data.login.value.token;\r\n        this.history = configs.history;\r\n        let headers:any = {\r\n            'Content-Type': 'application/json',\r\n            callerType: 'web'\r\n        };\r\n\r\n        if (tokenObj) {\r\n            headers['Authorization'] = `Bearer ${tokenObj}`;\r\n        }\r\n\r\n        this.axios = Axios.create({\r\n            baseURL: `${configs.contextUser}`,\r\n            timeout: configs.requestTimeOut,\r\n            headers: headers\r\n        });\r\n        // Add a request interceptor\r\n        this.axios.interceptors.request.use((config) => {\r\n            return config;\r\n        }, (error: AxiosError) => {\r\n            if (error.request && error.request.data) {\r\n                return Promise.reject(error.request);\r\n            } else {\r\n                return Promise.reject(error);\r\n\r\n            }\r\n        });\r\n\r\n        // Add a response interceptor\r\n        this.axios.interceptors.response.use((response: AxiosResponse) => {\r\n            return response;\r\n        }, (error: AxiosError) => {\r\n            if (error && error.response && error.response.status && (error.response.status === 401)) {\r\n                return 'please login to proceed';\r\n                // if (error?.response?.data?.message || error?.response?.data?.ErrorMessage) {\r\n                //     if (error.response.data.name && error.response.data.name === 'TokenExipredError') {\r\n                //         store.dispatch(signoutUser());\r\n                //     }\r\n                //     notification.message = error.response.data.message || error.response.data?.ErrorMessage;\r\n                // }\r\n                // store.dispatch(toggleNotification(notification));\r\n                // store.dispatch(signoutUser());\r\n\r\n                // navigate(AppRoutes.Account, true);\r\n                // return Promise.reject({ ...error });\r\n            } else if (error && error.response && error.response.status === 403) {\r\n                return 'Unauthorized';\r\n                // if (error?.response?.data?.message || error?.response?.data?.ErrorMessage) {\r\n                //     notification.message = error.response.data.message || error.response.data.ErrorMessage;\r\n                // }\r\n                // store.dispatch(toggleNotification(notification));\r\n                // return Promise.reject({ ...error });\r\n            } else if (error && error.response && error.response.status === 400) {\r\n                return 'One of the field validation failed';\r\n\r\n                // if (error && Array.isArray(error?.response?.data)) {\r\n                //     const arrayOfErrors = error.response.data.map((item: { ErrorMessage: string }) => item?.ErrorMessage);\r\n                //     notification.message = arrayOfErrors.join(\", \");\r\n                // } else if (error?.response?.data?.ErrorMessage) {\r\n                //     notification.message = error.response.data?.ErrorMessage;\r\n                // } else if (error?.response?.data) {\r\n                //     notification.message = error.response.data;\r\n                // }\r\n\r\n                // store.dispatch(toggleNotification(notification));\r\n\r\n                // return Promise.reject(error);\r\n            } else if (error?.response?.status === 404) {\r\n                 return 'record not found';\r\n\r\n                // if (error && Array.isArray(error.response.data)) {\r\n                //     const arrayOfErrors = error.response.data.map((item: { ErrorMessage: string }) => item.ErrorMessage);\r\n                //     notification.message = arrayOfErrors.join(\", \");\r\n                // } else if (error && error.response && error.response.data && error.response.data?.ErrorMessage) {\r\n                //     notification.message = error.response.data.ErrorMessage;\r\n                // }\r\n\r\n                // store.dispatch(toggleNotification(notification));\r\n\r\n                // return Promise.reject(error);\r\n            } else if (error && error.response && error.response.status === 500) {\r\n                return 'internal server error';\r\n                // store.dispatch(toggleNotification(notification));\r\n\r\n                // return Promise.reject(error);\r\n            } else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    }\r\n}","import { AxiosPromise } from \"axios\";\r\nimport configs from \"../../configs\";\r\n\r\nimport { UserLiveApis } from \"../live/userLive/userLiveApis\";\r\n\r\n\r\n\r\nexport class UserApis {\r\n    private static authLiveApis: UserLiveApis = new UserLiveApis();\r\n    \r\n    static login(data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.loginUser(data);\r\n        }\r\n    }  \r\n\r\n    static register(data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.registerUser(data);\r\n        }\r\n    }  \r\n\r\n    static verifyMail(pageNo:any): AxiosPromise<Array<any>> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.verifyMail(pageNo);\r\n        }\r\n    } \r\n\r\n    static resendVerificationCode(pageNo:any): AxiosPromise<Array<any>> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.resendVerificationCode(pageNo);\r\n        }\r\n    } \r\n\r\n    // static forgotPassword(data: any): AxiosPromise<any> {\r\n    //     if (configs.type === \"LOCAL\") {\r\n    //         return {} as AxiosPromise;\r\n    //     } else {\r\n    //         return this.authLiveApis.forgotPassword(data);\r\n    //     }\r\n    // }\r\n\r\n    // static resetPassword(data: any): AxiosPromise<any> {\r\n    //     if (configs.type === \"LOCAL\") {\r\n    //         return {} as AxiosPromise;\r\n    //     } else {\r\n    //         return this.authLiveApis.resetPassword(data);\r\n    //     }\r\n    // }\r\n\r\n    static createStore(data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.createStore(data);\r\n        }\r\n    }\r\n\r\n    static getStore(): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getStore();\r\n        }\r\n    } \r\n\r\n    static getSingleStore(identifier:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getSingleStore(identifier);\r\n        }\r\n    } \r\n\r\n    static updateStore(store_id:any, data:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.updateStore(store_id, data);\r\n        }\r\n    } \r\n\r\n    static deleteStore(id:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.deleteStore(id);\r\n        }\r\n    } \r\n\r\n    static createCategory(storeCode:any, data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.createCategory(storeCode,data);\r\n        }\r\n    }\r\n\r\n    static getCategory(storeCode:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getCategory(storeCode);\r\n        }\r\n    } \r\n\r\n    static getSingleCategory(store_code:any, category_id:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getSingleCategory(store_code, category_id);\r\n        }\r\n    } \r\n\r\n    static createProduct(storeCode:any, data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.createProduct(storeCode,data);\r\n        }\r\n    }\r\n\r\n    static getProduct(storeCode:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getProduct(storeCode);\r\n        }\r\n    } \r\n\r\n    static getSingleProduct(store_code:any, category_id:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getSingleProduct(store_code, category_id);\r\n        }\r\n    } \r\n\r\n    static updateProduct(store_code:any, product_id:any, data:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.updateProduct(store_code, product_id, data);\r\n        }\r\n    } \r\n\r\n    static createCustomer(storeCode:any, data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.createCustomer(storeCode,data);\r\n        }\r\n    }\r\n\r\n    static getAllCustomer(storeCode:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getAllCustomer(storeCode);\r\n        }\r\n    } \r\n\r\n    static getSingleCustomer(store_code:any, customer_id:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getSingleCustomer(store_code, customer_id);\r\n        }\r\n    } \r\n\r\n    static updateCustomer(store_code:any, customer_id:any, data:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.updateCustomer(store_code, customer_id, data);\r\n        }\r\n    } \r\n\r\n    static logout(data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.logout(data);\r\n        }\r\n    }\r\n\r\n\r\n}","import { AxiosGlobal } from \"../../shared/axios\";\r\nimport{ AxiosPromise} from \"axios\";\r\nimport configs from \"../../../configs\";\r\nimport { store } from \"../../../store/store\";\r\n\r\n\r\n\r\nexport class UserLiveApis extends AxiosGlobal{\r\n    \r\n    loginUser(data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/${configs.apiList.LOGIN}`, data,\r\n            {\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n              }\r\n        );\r\n    }\r\n\r\n\r\n    registerUser(data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/${configs.apiList.REGISTER}`, data);\r\n    } \r\n\r\n    verifyMail(data: any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/auth/verify-account`, data);\r\n    }\r\n\r\n    resendVerificationCode(data: any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/auth/resend-code`, data);\r\n    }\r\n\r\n    // forgotPassword(data:any): AxiosPromise<any> {\r\n    //     return this.axios.post(`${configs.contextUser}/forgot`, data);\r\n    // }\r\n\r\n    // resetPassword(data:any): AxiosPromise<any> {\r\n    //     return this.axios.post(`${configs.contextUser}/reset`, data);\r\n    // }\r\n\r\n    createStore(data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/store/create`, data,{\r\n            headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n          });\r\n    }\r\n\r\n    getStore(): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/store/allStores`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    getSingleStore(identifier:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/store/${identifier}/getOne`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    updateStore(store_id:any, data:any): AxiosPromise<Array<any>> {\r\n        return this.axios.put(`${configs.contextUser}/store/${store_id}/update`,  data,{\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    deleteStore(id: any): AxiosPromise<Array<any>> {\r\n        return this.axios.delete(`${configs.contextUser}/store/${id}/remove`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n    \r\n    createCategory(storeCode:any, data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/${storeCode}/categories/createOne`, data,{\r\n            headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n          });\r\n    }\r\n\r\n    getCategory(storeCode:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${storeCode}/categories/fetchAll`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    getSingleCategory(store_code:any, category_id:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${store_code}/categories/${category_id}/getOne`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    createProduct(storeCode:any, data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/${storeCode}/products`, data,{\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n          });\r\n    }\r\n \r\n    getProduct(storeCode:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${storeCode}/products`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    getSingleProduct(store_code:any, product_id:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${store_code}/products/${product_id}`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    \r\n    updateProduct(store_code:any, product_id:any, data:any): AxiosPromise<Array<any>> {\r\n        return this.axios.put(`${configs.contextUser}/${store_code}/products/${product_id}`,  data,{\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n\r\n    createCustomer(storeCode:any, data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/${storeCode}/customers/create`, data,{\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n          });\r\n    }\r\n\r\n    getAllCustomer(storeCode:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${storeCode}/customers/getAll`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    getSingleCustomer(store_code:any, customer_id:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${store_code}/customers/getOne/${customer_id}`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    updateCustomer(store_code:any, customer_id:any, data:any): AxiosPromise<Array<any>> {\r\n        return this.axios.put(`${configs.contextUser}/${store_code}/customers/update/${customer_id}`,  data,{\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    logout(data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/logout`, data,{\r\n            headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n          });\r\n    }\r\n    \r\n    // getAllHouses(cursor:any): AxiosPromise<Array<any>> {\r\n    //     return this.axios.get(`${configs.context}/${configs.apiList.HOSTELS}/${configs.apiList.GET_ALL_HOSTEL}?cursor=${cursor}`,{\r\n    //         headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n    //       });\r\n    // }\r\n\r\n\r\n    // getAllUsers(cursor:any): AxiosPromise<Array<any>> {\r\n    //     return this.axios.get(`${configs.context}/${configs.apiList.GET_ALL_USERS}?cursor=${cursor}`,{\r\n    //         headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n    //       });\r\n    // }\r\n\r\n\r\n\r\n    //  loginUser(data:any): AxiosPromise<any> {\r\n    //      return this.axios.post(`${configs.context}/login`, data,{\r\n    //         headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":'Bearer 2|X4dvppS3EugstZmfvKwPbf4jBF7Y70OYvKGjdFnQ',\"Access-Control-Allow-Origin\":\"*\" },\r\n    //       });\r\n    // }\r\n\r\n\r\n}","import React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst LoadingSpinner = (props: Props) => {\r\n  return (\r\n    <svg\r\n      role=\"status\"\r\n      className=\"inline w-5 h-5 mr-2 text-gray-200 animate-spin  fill-gray-600 \"\r\n      viewBox=\"0 0 100 101\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n        fill=\"currentFill\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport LoadingSpinner from \"../../components/UI/LoadingSpinner\";\r\nimport { UserApis } from \"../../apis/userApi/userApi\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { login } from \"../../reducer/loginSlice\";\r\ninterface ImageUploadProps {\r\n  image: string | undefined; // URL of the uploaded image\r\n  setImage: (image: string | undefined) => void; // Updates the image URL\r\n}\r\nconst AddStore = () => {\r\n  // const [showPassword, setShowPassword] = useState(false);\r\n  // const [confirmPassword, setShowConfirmPassword] = useState(false);\r\n  // const dispatch: Dispatch = useDispatch();\r\n  const [image, setImage] = useState<any>(undefined);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch: Dispatch = useDispatch();\r\n\r\n  const initialData = {\r\n    store_logo: \"\",\r\n    store_name: \"\",\r\n    store_abbreviation: \"\",\r\n    industry_type: \"\",\r\n    product_type: \"\",\r\n    store_description: \"\",\r\n    store_location: \"\",\r\n  };\r\n\r\n  const validation = Yup.object().shape({\r\n    store_logo: Yup.mixed()\r\n      .required(\"Store logo is required\")\r\n      .test(\r\n        \"fileType\",\r\n        \"Invalid file type. Only images are allowed.\",\r\n        (value: any) =>\r\n          value && [\"image/jpeg\", \"image/png\", \"image/jpg\"].includes(value.type)\r\n      )\r\n      .test(\r\n        \"fileSize\",\r\n        \"File size is too large. Maximum size is 2MB.\",\r\n        (value: any) => value && value.size <= 2 * 1024 * 1024 // 2MB\r\n      ),\r\n    store_name: Yup.string()\r\n      .required(\"Store name is required\")\r\n      .min(3, \"Store name must be at least 3 characters\")\r\n      .max(100, \"Store name cannot exceed 100 characters\"),\r\n    store_abbreviation: Yup.string()\r\n      .required(\"Store abbreviation is required\")\r\n      .max(10, \"Abbreviation cannot exceed 10 characters\"),\r\n    industry_type: Yup.string().required(\"Industry type is required\"),\r\n    product_type: Yup.string().required(\"Product type is required\"),\r\n    store_description: Yup.string()\r\n      .required(\"Store description is required\")\r\n      .min(10, \"Description must be at least 10 characters\"),\r\n    store_location: Yup.string().required(\"Store location is required\"),\r\n  });\r\n\r\n  const ImageUpload: React.FC<ImageUploadProps> = ({ image, setImage }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleImageChange = async (\r\n      e: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      const file = e.target.files?.[0];\r\n      if (file) {\r\n        setLoading(true); // Show loading spinner or indicator\r\n\r\n        try {\r\n          // Create a FormData object\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"upload_preset\", \"urban_image\"); // Replace with your Cloudinary preset\r\n\r\n          // Upload to Cloudinary\r\n          const response = await fetch(\r\n            \"https://api.cloudinary.com/v1_1/dngyazspl/image/upload\",\r\n            {\r\n              method: \"POST\",\r\n              body: formData,\r\n            }\r\n          );\r\n\r\n          const result = await response.json();\r\n          if (result.secure_url) {\r\n            // Set the image URL in the state\r\n            setImage(result.secure_url);\r\n          }\r\n\r\n          setLoading(false); // Stop loading\r\n        } catch (error) {\r\n          console.error(\"Error uploading image\", error);\r\n          toast.error(\"Error uploading image. Please try again.\");\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"flex justify-center text-center\">\r\n        <label className=\"flex w-full bg-[#FBFBFF] border border-[#D8D8E2] flex-col items-center justify-center rounded-[5px] cursor-pointer relative\">\r\n          <div className=\"flex flex-col items-center justify-center h-[80px]\">\r\n            {image ? (\r\n              <img\r\n                className=\"\"\r\n                src={image} // This should now be the Cloudinary URL\r\n                alt=\"Uploaded logo\"\r\n                width={100}\r\n                height={100}\r\n              />\r\n            ) : (\r\n              <div className=\"flex justify-center items-center\">\r\n                <div className=\"flex flex-col\">\r\n                  <h4 className=\"text-[#9D9D9D] text-[12px] font-[400] \">\r\n                    Upload Logo Image here{\" \"}\r\n                  </h4>\r\n                  <h4 className=\"text-[#9D9D9D] text-[10px] font-[400] \">\r\n                    Recommended size 32px by 32px{\" \"}\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n              //   <img\r\n              //     className=\"\"\r\n              //     src=\"/onboarding/Icon.svg\" // Default placeholder image\r\n              //     alt=\"Default\"\r\n              //     width={100}\r\n              //     height={100}\r\n              //   />\r\n            )}\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/x-png,image/gif,image/jpeg\"\r\n            className=\"hidden mb-2 text-sm text-[#6C757D] font-medium\"\r\n            onChange={handleImageChange}\r\n          />\r\n        </label>\r\n        {loading && <p>Uploading...</p>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onSubmit = async (\r\n    values: any,\r\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\r\n  ) => {\r\n    setSubmitting(true);\r\n\r\n    try {\r\n      // Create a FormData object\r\n      const formData = new FormData();\r\n      formData.append(\"store_logo\", image); // File\r\n      formData.append(\"store_name\", values.store_name);\r\n      formData.append(\r\n        \"store_abbreviation\",\r\n        values.store_abbreviation ? values.store_abbreviation : \"\"\r\n      );\r\n      formData.append(\"industry_type\", values.industry_type);\r\n      formData.append(\"product_type\", values.product_type);\r\n      formData.append(\"store_description\", values.store_description);\r\n      formData.append(\"store_location\", values.store_location);\r\n\r\n      // Send the data to the API\r\n      const response = await UserApis.createStore(formData);\r\n\r\n      if (response?.data?.status === true) {\r\n              dispatch(\r\n                    login({\r\n                      login: values.login,\r\n                      token: response.data.token,\r\n                      id: response.data.data.id,\r\n                      name: response.data.data.first_name,\r\n                      data: response?.data?.data,\r\n                    })\r\n                  );\r\n        toast.success(\"Store created successfully!\");\r\n        // Redirect or reset form\r\n        console.log(\"Store created:\", response.data);\r\n        navigate(\"/dashboard/home\");\r\n      } else {\r\n        toast.error(\"Failed to create store. Please try again.\");\r\n        console.error(\"Error response:\", response);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating store:\", error);\r\n      toast.error(\"An error occurred while creating the store.\");\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-8\">\r\n        <div className=\"grid md:grid-cols-2 \">\r\n          <div className=\"h-screen md:block hidden \">\r\n            <img\r\n              src=\"/images/auth/authImage1.svg\"\r\n              className=\"h-screen\"\r\n              alt=\"mart Logo\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"md:block flex \">\r\n            <div className=\" pt-10  px-5\">\r\n              <div className=\"\">\r\n                <img\r\n                  src=\"/images/logo2.svg\"\r\n                  className=\"w-\"\r\n                  alt=\"myappspace Logo\"\r\n                />\r\n                <div className=\" mt-7 \">\r\n                  <h5 className=\"text-[#000000] text-[16px] font-[600] \">\r\n                    Business Information\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-col max-w-[570px] mt-2 gap-3\">\r\n                <Formik\r\n                  initialValues={initialData}\r\n                  validationSchema={validation}\r\n                  onSubmit={onSubmit}\r\n                >\r\n                  {({ values, isSubmitting, handleChange }) => (\r\n                    <Form className=\"w-full  mb-6 flex flex-col justify-between\">\r\n                      <div className=\"\">\r\n                        <div className=\" mb-3 w-full relative\">\r\n                          <label\r\n                            className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                            htmlFor=\"first_name\"\r\n                          >\r\n                            Add Logo\r\n                          </label>\r\n                          <ImageUpload image={image} setImage={setImage} />\r\n\r\n                          <p className=\"text-red-700 text-xs mt-1 \">\r\n                            <ErrorMessage name=\"first_name\" />\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"store_name\"\r\n                            >\r\n                              Store Name\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-[#969696] bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"store_name\"\r\n                              type=\"text\"\r\n                              id=\"store_name\"\r\n                              onChange={handleChange}\r\n                              value={values.store_name}\r\n                              placeholder=\"Store Name\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"store_name\" />\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"industry_type\"\r\n                            >\r\n                              Industry Type\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-[#969696] bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"industry_type\"\r\n                              type=\"text\"\r\n                              id=\"industry_type\"\r\n                              onChange={handleChange}\r\n                              value={values.industry_type}\r\n                              placeholder=\"Retail, Fashion etc\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"industry_type\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"store_location\"\r\n                            >\r\n                              Business Location\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-[#969696] bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"store_location\"\r\n                              type=\"text\"\r\n                              id=\"store_location\"\r\n                              onChange={handleChange}\r\n                              value={values.store_location}\r\n                              placeholder=\"Abuja, Nigeria\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"store_location\" />\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"product_type\"\r\n                            >\r\n                              Products Type\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-[#969696] bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"product_type\"\r\n                              type=\"text\"\r\n                              id=\"product_type\"\r\n                              onChange={handleChange}\r\n                              value={values.product_type}\r\n                              placeholder=\"Physical, Digital, Both\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"product_type\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\" mb-3 w-full relative\">\r\n                          <label\r\n                            className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                            htmlFor=\"store_description\"\r\n                          >\r\n                            Business Description\r\n                          </label>\r\n                          <Field\r\n                            as=\"textarea\"\r\n                            rows={4}\r\n                            className=\"mt-1 block w-full  border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-[#969696] bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                            name=\"store_description\"\r\n                            type=\"text\"\r\n                            id=\"store_description\"\r\n                            onChange={handleChange}\r\n                            value={values.store_description}\r\n                            placeholder=\"Enter a short description of your store\"\r\n                          />\r\n                          <p className=\"text-red-700 text-xs mt-1 \">\r\n                            <ErrorMessage name=\"store_description\" />\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex justify-end items-end h-full\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          disabled={isSubmitting} // Formik automatically sets this during submission\r\n                          className={`disabled:bg-gray-500 flex gap-2 items-center py-2 w-fit px-6 bg-secondary text-white rounded-full hover:bg-secondary/[70%]`}\r\n                        >\r\n                          {isSubmitting ? <LoadingSpinner /> : \"Proceed\"}\r\n                          {!isSubmitting && <FaArrowRight />}\r\n                        </button>\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={2000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddStore;\r\n"],"names":["APILIST","delay","dashbordRefreshRate","port","appName","toastDelay","tokenStorage","socket","type","contextCustomer","contextUser","contextAdmin","history","createBrowserHistory","requestTimeOut","apiList","tablePageSize","AxiosGlobal","toJSON","strOrObject","this","JSON","parse","requestType","_requestType","axios","defaults","headers","common","constructor","tokenObj","store","getState","data","login","value","token","configs","callerType","concat","Axios","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","_error$response","status","UserApis","authLiveApis","loginUser","register","registerUser","verifyMail","pageNo","resendVerificationCode","createStore","getStore","getSingleStore","identifier","updateStore","store_id","deleteStore","id","createCategory","storeCode","getCategory","getSingleCategory","store_code","category_id","createProduct","getProduct","getSingleProduct","updateProduct","product_id","createCustomer","getAllCustomer","getSingleCustomer","customer_id","updateCustomer","logout","post","LOGIN","REGISTER","get","put","delete","props","_jsxs","role","className","viewBox","fill","xmlns","children","_jsx","d","AddStore","image","setImage","useState","undefined","navigate","useNavigate","dispatch","useDispatch","validation","Yup","shape","store_logo","required","test","includes","size","store_name","min","max","store_abbreviation","industry_type","product_type","store_description","store_location","ImageUpload","_ref","loading","setLoading","src","alt","width","height","accept","onChange","async","_e$target$files","file","e","target","files","formData","FormData","append","fetch","method","body","result","json","secure_url","console","toast","Formik","initialValues","validationSchema","onSubmit","values","_ref2","setSubmitting","_response$data","_response$data2","name","first_name","success","log","_ref3","isSubmitting","handleChange","Form","htmlFor","ErrorMessage","Field","placeholder","as","rows","disabled","LoadingSpinner","FaArrowRight","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}