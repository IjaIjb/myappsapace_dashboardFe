{"version":3,"file":"static/js/4674.bb635ba9.chunk.js","mappings":"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","sources":["components/UI/LoadingSpinner.tsx","pages/auth/OTPVerify.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst LoadingSpinner = (props: Props) => {\r\n  return (\r\n    <svg\r\n      role=\"status\"\r\n      className=\"inline w-5 h-5 mr-2 text-gray-200 animate-spin  fill-gray-600 \"\r\n      viewBox=\"0 0 100 101\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n        fill=\"currentFill\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { FaEyeSlash, FaEye, FaArrowRight } from \"react-icons/fa\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { UserApis } from '../../apis/userApi/userApi';\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\n\r\nconst OTPVerify = () => {\r\n    const navigate = useNavigate();\r\n    const [show, setShow] = useState(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n    const [timer, setTimer] = useState(0);\r\n    const [isValidEmail, setIsValidEmail] = useState(false);\r\n  const [loader, setLoader] = React.useState<any>(false);\r\n\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n    const [userData, setUserdata] = useState({\r\n      'one': \"\",\r\n      'two': \"\",\r\n      'three': \"\",\r\n      'four': \"\",\r\n      'five': \"\",\r\n      'six': \"\",\r\n      'email': \"\",\r\n      'password': \"\",\r\n      'confirm_password': \"\"\r\n    });\r\n  \r\n    useEffect(() => {\r\n      // Check if OTPEmail is set\r\n      const OTPEmail = localStorage.getItem('OTPEmail');\r\n      if (!OTPEmail) {\r\n        // Redirect to forgot-password if OTPEmail is not set\r\n        navigate('/forgot-password');\r\n      } else {\r\n        // Auto display the email and make the input read-only\r\n        setUserdata((prevData) => ({ ...prevData, email: OTPEmail }));\r\n        validateEmail(OTPEmail); // Set the email as valid\r\n      }\r\n  \r\n      const storedTime = localStorage.getItem('resendOTPTimer');\r\n      if (storedTime) {\r\n        const remainingTime = Math.max(0, Number(storedTime) - Math.floor(Date.now() / 1000));\r\n        setTimer(remainingTime);\r\n      }\r\n    }, [navigate]);\r\n  \r\n    useEffect(() => {\r\n      if (timer > 0) {\r\n        const interval = setInterval(() => {\r\n          setTimer(prev => prev - 1);\r\n        }, 1000);\r\n        return () => clearInterval(interval);\r\n      }\r\n    }, [timer]);\r\n    \r\n    const validateEmail = (email:any) => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      setIsValidEmail(emailRegex.test(email));\r\n  };\r\n\r\n  const validatePassword = (password:any, confirmPassword:any) => {\r\n      const strongPasswordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\r\n      if (!strongPasswordRegex.test(password)) {\r\n          setPasswordError(\"Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one number, and one special character.\");\r\n          return false;\r\n      }\r\n      if (password !== confirmPassword) {\r\n          setPasswordError(\"Passwords do not match.\");\r\n          return false;\r\n      }\r\n      setPasswordError(\"\");\r\n      return true;\r\n  };\r\n\r\n  const handleChange = (e:any) => {\r\n      const { name, value } = e.target;\r\n      if (name === 'email') {\r\n          validateEmail(value);\r\n      }\r\n      setUserdata((prevData) => {\r\n        const updatedData = { ...prevData, [name]: value };\r\n        if (name === 'password' || name === 'confirm_password') {\r\n            validatePassword(updatedData.password, updatedData.confirm_password);\r\n        }\r\n        return updatedData;\r\n    });\r\n  };\r\n\r\n  \r\n    const handleSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      if (!validatePassword(userData.password, userData.confirm_password)) {\r\n        return;\r\n    }\r\n    setLoader(true)\r\n      const formData = new FormData();\r\n      formData.append('token', userData?.one + userData?.two + userData?.three + userData?.four + userData?.five + userData?.six);\r\n      formData.append('email', userData?.email);\r\n      formData.append('password', userData?.password);\r\n      formData.append('password_confirmation', userData?.confirm_password);\r\n  \r\n      UserApis.resetPassword(formData).then(\r\n        (response) => {\r\n          if (response?.data && response?.status === 200) {\r\n            // Remove OTPEmail from local storage\r\n            localStorage.removeItem('OTPEmail');\r\n            setLoader(false)\r\n            \r\n            navigate('/reset-success');\r\n          }\r\n        }\r\n      ).catch(function (error) {\r\n        setLoader(false)\r\n\r\n        // console.log(error.response.data);\r\n      });\r\n    };\r\n  \r\n    const handleResendOTP = () => {\r\n      if (isValidEmail && timer === 0) {\r\n        UserApis.forgotPassword({ email: userData.email }).then(\r\n          (response) => {\r\n            if (response?.data) {\r\n              \r\n              const newTimerValue = 60;\r\n              setTimer(newTimerValue);\r\n              localStorage.setItem('resendOTPTimer', String(Math.floor(Date.now() / 1000) + newTimerValue));\r\n              \r\n              toast.success('OTP resent successfully');\r\n              // console.log('OTP resent successfully');\r\n            }\r\n          }\r\n        ).catch(function (error) {\r\n          toast.error('OTP resent Failed');\r\n          console.log(error);\r\n        });\r\n      }\r\n    };\r\n    \r\n  return (\r\n    <>\r\n    \r\n    <section className=\"bg-[#FBFBFB]  body-font font-poppins \">\r\n      <div className=\"flex justify-center py-24\">\r\n        <div className=\"lg:px-24  md:w-[700px] px-5 mt-30\">\r\n          <div className=\"flex justify-center\">\r\n          <a href=\"https://myappspace.net/\" rel=\"noreferrer\" target=\"_blank\">\r\n            <img\r\n              src=\"/images/auth/MyAppspace (3).png\"\r\n              className=\"w-[170px] h-full\"\r\n              alt=\"Logo\"\r\n            />\r\n            </a>\r\n         </div>\r\n         <div className='flex justify-center'>\r\n          <h1 className=\"max-w-2xl mt-6 text-3xl text-[#000000] font-semibold leading-10 md:text-3xl xl:text-4xl text-center\">\r\n            Password Reset\r\n          </h1>\r\n          </div>\r\n          <p className=\"text-xs mt-3 text-gray-500 text-center\">\r\n            We sent a code to your Email\r\n          </p>\r\n          <form onSubmit={handleSubmit}>\r\n            <div id=\"otp\" className=\"flex flex-row justify-center text-center px-2 mt-5 mb-5\">\r\n              <input className=\"m-2 border h-14 w-12 text-center form-control focus:border-[#48B774] focus:ring-[#48B774] font-semibold text-3xl\" type=\"text\" id=\"first\" name=\"one\" onChange={handleChange} maxLength={1} />\r\n              <input className=\"m-2 border h-14 w-12 text-center form-control focus:border-[#48B774] focus:ring-[#48B774] font-semibold text-3xl\" type=\"text\" id=\"second\" name=\"two\" onChange={handleChange} maxLength={1} />\r\n              <input className=\"m-2 border h-14 w-12 text-center form-control focus:border-[#48B774] focus:ring-[#48B774] font-semibold text-3xl\" type=\"text\" id=\"third\" name=\"three\" onChange={handleChange} maxLength={1} />\r\n              <input className=\"m-2 border h-14 w-12 text-center form-control focus:border-[#48B774] focus:ring-[#48B774] font-semibold text-3xl\" type=\"text\" id=\"fourth\" name=\"four\" onChange={handleChange} maxLength={1} />\r\n              <input className=\"m-2 border h-14 w-12 text-center form-control focus:border-[#48B774] focus:ring-[#48B774] font-semibold text-3xl\" type=\"text\" id=\"fifth\" name=\"five\" onChange={handleChange} maxLength={1} />\r\n              <input className=\"m-2 border h-14 w-12 text-center form-control focus:border-[#48B774] focus:ring-[#48B774] font-semibold text-3xl\" type=\"text\" id=\"sixth\" name=\"six\" onChange={handleChange} maxLength={1} />\r\n            </div>\r\n\r\n            <div className=\"mb-5\">\r\n              <label className=\"block mb-2 text-sm font-semibold text-[#414143]\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"border border-[#D9D9D9] text-[#333333] text-sm rounded-lg block w-full p-3\"\r\n                placeholder=\"*****\"\r\n                name=\"email\"\r\n                required\r\n                value={userData.email}\r\n                readOnly\r\n              />\r\n            </div>\r\n\r\n            <div className=\"relative mb-5\">\r\n              <label className=\"block mb-2 text-sm font-semibold text-[#414143]\">Password</label>\r\n              <input\r\n                type={show ? \"text\" : \"password\"}\r\n                className=\"border border-[#D9D9D9] text-[#333333] text-sm rounded-lg block w-full p-3\"\r\n                placeholder=\"Enter a new password\"\r\n                name=\"password\"\r\n                required\r\n                onChange={handleChange}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute right-2.5 bottom-3.5\"\r\n                onClick={() => setShow((prev) => !prev)}\r\n              >\r\n                {!show ? <FaEyeSlash /> : <FaEye />}\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"relative mb-5\">\r\n              <label className=\"block mb-2 text-sm font-semibold text-[#414143]\">Confirm Password</label>\r\n              <input\r\n                type={showConfirmPassword ? \"text\" : \"password\"}\r\n                className=\"border border-[#D9D9D9] text-[#333333] text-sm rounded-lg block w-full p-3\"\r\n                placeholder=\"*****\"\r\n                name=\"confirm_password\"\r\n                required\r\n                onChange={handleChange}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute right-2.5 bottom-3.5\"\r\n                onClick={() => setShowConfirmPassword((prev) => !prev)}\r\n              >\r\n                {!showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\r\n              </button>\r\n            </div>\r\n            <div>\r\n            {passwordError && <p className=\"text-red-500 text-sm mb-3\">{passwordError}</p>}\r\n\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={userData.one === \"\" || userData.two === \"\" || userData.three === \"\" || userData.four === \"\" || userData.five === \"\" || userData.six === \"\" || userData.password !== userData.confirm_password}\r\n\r\n\r\n              className=\"w-full disabled:bg-gray-500 flex justify-center gap-2 text-center items-center  text-white bg-secondary hover:bg-secondary/[70%] focus:ring-4 font-medium rounded-full text-sm px-5 py-2.5 mr-2 mb-2\"\r\n            >\r\n          {loader ? <LoadingSpinner /> : \"Continue\"}\r\n                      {!loader && <FaArrowRight />}\r\n\r\n            </button>\r\n          </form>\r\n\r\n          <p className=\"text-center text-xs font-semibold mt-4 text-gray-500\">\r\n            Didn't receive any email?{\" \"}\r\n            <span\r\n              className={`text-[#000] cursor-pointer ${timer > 0 || !isValidEmail ? \"pointer-events-none opacity-50\" : \"\"}`}\r\n              onClick={handleResendOTP}\r\n            >\r\n              <span className=\"text-green-800\">{timer > 0 ? `Resend in ${timer}s` : \"Click here to resend\"}</span>\r\n            </span>\r\n          </p>\r\n\r\n          <NavLink to={\"/\"} className=\"flex justify-center mt-4\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6 mr-2\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 19.5L8.25 12l7.5-7.5\" />\r\n            </svg>\r\n            <span className=\"text-sm font-semibold text-gray-500 hover:text-[#333333]\">Back to login</span>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={2000}\r\n      hideProgressBar={true}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover />\r\n  </>\r\n  )\r\n}\r\n\r\nexport default OTPVerify"],"names":["props","_jsxs","role","className","viewBox","fill","xmlns","children","_jsx","d","OTPVerify","navigate","useNavigate","show","setShow","useState","showConfirmPassword","setShowConfirmPassword","timer","setTimer","isValidEmail","setIsValidEmail","loader","setLoader","React","passwordError","setPasswordError","userData","setUserdata","useEffect","OTPEmail","localStorage","getItem","prevData","_objectSpread","email","validateEmail","storedTime","remainingTime","Math","max","Number","floor","Date","now","interval","setInterval","prev","clearInterval","test","validatePassword","password","confirmPassword","handleChange","e","name","value","target","updatedData","confirm_password","_Fragment","href","rel","src","alt","onSubmit","preventDefault","formData","FormData","append","one","two","three","four","five","six","UserApis","resetPassword","then","response","data","status","removeItem","catch","error","id","type","onChange","maxLength","placeholder","required","readOnly","onClick","FaEye","FaEyeSlash","disabled","LoadingSpinner","FaArrowRight","concat","handleResendOTP","forgotPassword","newTimerValue","setItem","String","toast","success","console","log","NavLink","to","width","height","strokeWidth","stroke","strokeLinecap","strokeLinejoin","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}