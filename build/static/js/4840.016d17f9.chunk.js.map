{"version":3,"file":"static/js/4840.016d17f9.chunk.js","mappings":"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","sources":["components/UI/LoadingSpinner.tsx","pages/auth/PersonalSignup.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst LoadingSpinner = (props: Props) => {\r\n  return (\r\n    <svg\r\n      role=\"status\"\r\n      className=\"inline w-5 h-5 mr-2 text-gray-200 animate-spin  fill-gray-600 \"\r\n      viewBox=\"0 0 100 101\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n        fill=\"currentFill\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport LoadingSpinner from \"../../components/UI/LoadingSpinner\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport { UserApis } from \"../../apis/userApi/userApi\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { login } from \"../../reducer/loginSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nconst images = [\r\n  \"/images/auth/authImage1.svg\",\r\n  \"/images/auth/authImage2.svg\",\r\n  \"/images/auth/authImage3.svg\",\r\n]; // Add more images as needed\r\n\r\nconst PersonalSignup = () => {\r\n   const [index, setIndex] = useState(0);\r\n  \r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        setIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n      }, 3000); // Change image every 3 seconds\r\n  \r\n      return () => clearInterval(interval);\r\n    }, []);\r\n    \r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [confirmPassword, setShowConfirmPassword] = useState(false);\r\n  const dispatch: Dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const initialData:any = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    password: \"\",\r\n    password_confirmation: \"\",\r\n  };\r\n\r\n  const validation = Yup.object({\r\n    first_name: Yup.string().required(\"First Name is required\"),\r\n    last_name: Yup.string().required(\"Last Name is required\"),\r\n    email: Yup.string()\r\n      .email(\"Invalid email address\")\r\n      .required(\"Email is required\"),\r\n    phone_number: Yup.string()\r\n    .matches(/^[0-9]{10}$/, \"Phone number must be exactly 11 digits\")\r\n      .required(\"Phone number is required\"),\r\n    password: Yup.string()\r\n    .min(8, \"Password must be at least 8 characters\")\r\n    .matches(/[A-Z]/, \"Password must contain at least one uppercase letter\")\r\n    .matches(/[a-z]/, \"Password must contain at least one lowercase letter\")\r\n    .matches(/[0-9]/, \"Password must contain at least one number\")\r\n    .matches(\r\n      /[@$!%*?&]/,\r\n      \"Password must contain at least one special character (@, $, !, %, *, ?, &)\"\r\n    )\r\n    .required(\"Password is required\"),\r\n    password_confirmation: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), undefined], \"Passwords must match\")\r\n      .required(\"Confirm Password is required\"),\r\n  });\r\n  const isValidEmail = (email: string) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n  // const onSubmit = async (values:any) => {\r\n  //   if (values?.password !== values?.password_confirmation) {\r\n  //     return toast.error(\"Password does not match\");\r\n  // }\r\n  //   try {\r\n  //     // Convert form values to FormData\r\n  //     const formData = new FormData();\r\n  //     formData.append(\"first_name\", values.first_name);\r\n  //     formData.append(\"last_name\", values.last_name);\r\n  //     formData.append(\"email\", values.email);\r\n  //     formData.append(\"phone_number\", values.phone_number);\r\n  //     formData.append(\"password\", values.password);\r\n\r\n  //     // Submit formData to the API\r\n  //     const response = await UserApis.register(formData);\r\n  //     dispatch(login({ email: values?.email, token: response.data.token, name: response.data.name }))\r\n\r\n  //     console.log(\"Registration successful:\", response);\r\n  //     toast.success(\"Login Successful\");\r\n  //     navigate(\"/auth/verify-email\");\r\n  //     window.scrollTo(0, 0); // Scroll to top\r\n  //   } catch (error) {\r\n  //     console.error(\"Error registering user:\", error);\r\n  //   }\r\n  //   // UserApis.register(\"console.log()\")\r\n  //   //   navigate(\"/auth/verify-email\");\r\n\r\n  //   //   window.scrollTo(0, 0); // Scroll to top\r\n\r\n  // };\r\n\r\n  const onSubmit = async (\r\n    values: {\r\n      first_name: string;\r\n      last_name: string;\r\n      email: string;\r\n      phone_number: string;\r\n      password: string;\r\n      password_confirmation: string;\r\n    },\r\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\r\n  ) => {\r\n    if (values.password !== values.password_confirmation) {\r\n      toast.error(\"Passwords do not match\");\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n  \r\n    const formData = new FormData();\r\n    formData.append(\"first_name\", values.first_name);\r\n    formData.append(\"last_name\", values.last_name);\r\n    formData.append(\"email\", values.email);\r\n    formData.append(\"phone_number\", values.phone_number);\r\n    formData.append(\"password\", values.password);\r\n    formData.append(\"password_confirmation\", values.password_confirmation);\r\n  \r\n    try {\r\n      const response:any = await UserApis.register(formData);\r\n      // console.log(response)\r\n      if (response?.status === 200) {\r\n        dispatch(\r\n          login({\r\n            email: values.email,\r\n            // token: response.data.token,\r\n            // name: response.data.name,\r\n          })\r\n        );\r\n        // console.log(\"Signup created:\", response.data);\r\n\r\n        toast.success(\"Login Successful\");\r\n        navigate(\"/auth/verify-email\");\r\n      } else {\r\n        toast.error(response?.data?.errors?.message);\r\n      }\r\n    } catch (error:any) {\r\n      console.error(error);\r\n      toast.error(error.response.data?.message || \"An error occurred. Please try again.\");\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-8\">\r\n        <div className=\"grid md:grid-cols-2 \">\r\n          {/* <div className=\"h-screen md:block hidden \">\r\n            <img\r\n              src=\"/images/auth/authImage1.svg\"\r\n              className=\"h-screen\"\r\n              alt=\"Logo\"\r\n            />\r\n          </div> */}\r\n                     <div className=\"h-screen md:block hidden relative overflow-hidden\">\r\n                <AnimatePresence>\r\n                  <motion.img\r\n                    key={images[index]} // Ensure smooth transition\r\n                    src={images[index]}\r\n                    alt=\"Auth Image\"\r\n                    className=\"h-screen absolute top-0 left-0\"\r\n                    initial={{ opacity: 0, scale: 1.1 }}\r\n                    animate={{ opacity: 1, scale: 1 }}\r\n                    exit={{ opacity: 0, scale: 1.1 }}\r\n                    transition={{ duration: 1 }}\r\n                  />\r\n                </AnimatePresence>\r\n              </div>\r\n\r\n          <div className=\"md:block flex \">\r\n            <div className=\" pt-10  px-5\">\r\n              <div className=\"\">\r\n              <a href=\"https://myappspace.net/\" rel=\"noreferrer\" target=\"_blank\">\r\n            <img\r\n              src=\"/images/auth/MyAppspace (3).png\"\r\n              className=\"w-[170px] h-full\"\r\n              alt=\"Logo\"\r\n            />\r\n            </a>\r\n                <div className=\" mt-7 \">\r\n                  <h5 className=\"text-[#000000] text-[16px] font-[600] \">\r\n                    Personal Information\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-col max-w-[570px] mt-2 gap-3\">\r\n                <Formik\r\n                  initialValues={initialData}\r\n                  validationSchema={validation}\r\n                  onSubmit={onSubmit}\r\n                >\r\n                  {({ values, isSubmitting, handleChange }) => (\r\n                    <Form className=\"w-full  mb-6 flex flex-col justify-between\">\r\n                      <div className=\"\">\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"first_name\"\r\n                            >\r\n                              First Name\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"first_name\"\r\n                              type=\"text\"\r\n                              id=\"first_name\"\r\n                              onChange={handleChange}\r\n                              value={values.first_name}\r\n                              placeholder=\"First Name\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"first_name\" />\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"last_name\"\r\n                            >\r\n                              Last Name\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"last_name\"\r\n                              type=\"text\"\r\n                              id=\"last_name\"\r\n                              onChange={handleChange}\r\n                              value={values.last_name}\r\n                              placeholder=\"Last Name\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"last_name\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-5 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"email\"\r\n                            >\r\n                              Email Address\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"email\"\r\n                              type=\"email\"\r\n                              id=\"email\"\r\n                              onChange={handleChange}\r\n                              value={values.email}\r\n                              placeholder=\"\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"email\" />\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div className=\" mb-5 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"phone_number\"\r\n                            >\r\n                              Phone Number\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"phone_number\"\r\n                              type=\"number\"\r\n                              id=\"phone_number\"\r\n                              onChange={handleChange}\r\n                              value={values.phone_number}\r\n                              placeholder=\"08166965025\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"phone_number\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"password\"\r\n                            >\r\n                              Password\r\n                            </label>\r\n                            <div>\r\n                              <Field\r\n                                className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                value={values.password}\r\n                                id=\"password\"\r\n                                type={!showPassword ? \"password\" : \"text\"}\r\n                                placeholder=\"\"\r\n                              />\r\n                              <button\r\n                                type=\"button\"\r\n                                // role=\"button\"\r\n                                aria-label=\"show password\"\r\n                                title=\" show password\"\r\n                                onClick={() =>\r\n                                  setShowPassword(() => !showPassword)\r\n                                }\r\n                                className={`absolute right-4 top-[40px]`}\r\n                              >\r\n                                {!showPassword ? (\r\n                                  <AiOutlineEyeInvisible className=\"\" />\r\n                                ) : (\r\n                                  <AiOutlineEye className=\"\" />\r\n                                )}\r\n                              </button>\r\n                            </div>\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"password\" />\r\n                            </p>\r\n                          </div>\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"password_confirmation\"\r\n                            >\r\n                              Confirm Password\r\n                            </label>\r\n                            <div>\r\n                              <Field\r\n                                className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                                name=\"password_confirmation\"\r\n                                id=\"password_confirmation\"\r\n                                onChange={handleChange}\r\n                                value={values.password_confirmation}\r\n                                type={!confirmPassword ? \"password\" : \"text\"}\r\n                                placeholder=\"\"\r\n                              />\r\n                              <button\r\n                                type=\"button\"\r\n                                // role=\"button\"\r\n                                aria-label=\"show password\"\r\n                                title=\" show password\"\r\n                                onClick={() =>\r\n                                  setShowConfirmPassword(() => !confirmPassword)\r\n                                }\r\n                                className={`absolute right-4 top-[40px]`}\r\n                              >\r\n                                {!confirmPassword ? (\r\n                                  <AiOutlineEyeInvisible className=\"\" />\r\n                                ) : (\r\n                                  <AiOutlineEye className=\"\" />\r\n                                )}\r\n                              </button>\r\n                            </div>\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"password_confirmation\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n  <p className=\"flex items-center justify-center gap-x-1 text-[#1A1A1A] text-[16px] md:text-[18px] font-normal\">\r\n                          Already have an account?\r\n                          <Link\r\n                            to=\"/\"\r\n                            className=\"text-secondary underline font-bold hover:underline\"\r\n                          >\r\n                            Login Here\r\n                          </Link>\r\n                        </p>\r\n                      <div className=\"flex justify-end items-end h-full\">\r\n                      <button\r\n  type=\"submit\"\r\n  disabled={isSubmitting || \r\n    values.first_name === \"\" ||\r\n    !isValidEmail(values.email) ||\r\n    values.last_name === \"\"  || values.email === \"\"  || values.phone_number === \"\" || (values.password !== values.password_confirmation)} // Formik automatically sets this during submission\r\n  className={`disabled:bg-gray-500 flex gap-2 items-center py-2 w-fit px-6 bg-secondary text-white rounded-full hover:bg-secondary/[70%]`}\r\n>\r\n  {isSubmitting ? <LoadingSpinner /> : \"Proceed\"}\r\n  {!isSubmitting && <FaArrowRight />}\r\n</button>\r\n\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n              <p className=\"text-center text-sm text-[#1A1A1A] mt-4\">\r\n  By signing up, you agree to our\r\n  <a href=\"https://myappspace.net/terms-and-condition\"  rel=\"noopener noreferrer\" target=\"_blank\" className=\"text-secondary underline font-bold hover:underline mx-1\">\r\n    Terms & Conditions\r\n  </a>\r\n  and\r\n  <a href=\"https://myappspace.net/privacy-policy\"  rel=\"noopener noreferrer\" target=\"_blank\"  className=\"text-secondary underline font-bold hover:underline mx-1\">\r\n    Privacy Policy\r\n  </a>.\r\n</p>\r\n\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={2000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalSignup;\r\n"],"names":["props","_jsxs","role","className","viewBox","fill","xmlns","children","_jsx","d","images","PersonalSignup","index","setIndex","useState","useEffect","interval","setInterval","prevIndex","length","clearInterval","showPassword","setShowPassword","confirmPassword","setShowConfirmPassword","dispatch","useDispatch","navigate","useNavigate","validation","Yup","first_name","required","last_name","email","phone_number","matches","password","min","password_confirmation","oneOf","undefined","AnimatePresence","motion","img","src","alt","initial","opacity","scale","animate","exit","transition","duration","href","rel","target","Formik","initialValues","validationSchema","onSubmit","async","values","_ref","setSubmitting","toast","error","formData","FormData","append","response","UserApis","register","_response$data","_response$data$errors","status","login","success","data","errors","message","_error$response$data","console","_ref2","isSubmitting","handleChange","Form","htmlFor","Field","name","type","id","onChange","value","placeholder","ErrorMessage","title","onClick","AiOutlineEye","AiOutlineEyeInvisible","Link","to","disabled","test","LoadingSpinner","FaArrowRight","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}