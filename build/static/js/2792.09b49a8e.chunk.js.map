{"version":3,"file":"static/js/2792.09b49a8e.chunk.js","mappings":"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","sources":["components/UI/LoadingSpinner.tsx","pages/dashboard/products/inner/StoreInfoGen.tsx","pages/dashboard/products/inner/DisplayInfoGen.tsx","pages/dashboard/settings/inner/BannerSettings.tsx","pages/dashboard/settings/inner/LogoSettings.tsx","pages/dashboard/settings/inner/SocialAndContact.tsx","pages/dashboard/settings/inner/GeneralInfo.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst LoadingSpinner = (props: Props) => {\r\n  return (\r\n    <svg\r\n      role=\"status\"\r\n      className=\"inline w-5 h-5 mr-2 text-gray-200 animate-spin  fill-gray-600 \"\r\n      viewBox=\"0 0 100 101\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n        fill=\"currentFill\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\n\r\nconst StoreInfoGen = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"bg-white rounded-[14px] pt-3 pb-4 pl-3 pr-5\">\r\n        <h4 className=\"text-[#000000] text-[14px] font-[600] pb-2\">\r\n          Store Informstion\r\n        </h4>\r\n\r\n        {/* <div className=\"flex flex-col gap-2\">\r\n                          <div className=\"bg-[#FBFBFF] py-3 px-2\">\r\n                            <h4 className=\"text-[12px] font-[400]\">\r\n                              Ezeh Rachael, John Mustapha, Chukwu Yemi\r\n                            </h4>\r\n                          </div>\r\n                        </div> */}\r\n\r\n        {/* <div className=\"flex items-center bg-[#796BEB1A]/[10%] px-3 w-fit py-1 mt-3 rounded-[5px] gap-2\">\r\n                          <IoAddCircleOutline className=\"\" />\r\n        \r\n                          <h5 className=\"text-[10px] font-[400]\">New Customer</h5>\r\n                        </div> */}\r\n\r\n        <div className=\"\">\r\n          <h4 className=\"text-[12px] font-[400]\">Store Name</h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mt-3\">\r\n          <h4 className=\"text-[12px] font-[400]\">Store Slogan (Optional)</h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n          />\r\n        </div>\r\n        <div className=\"mt-3\">\r\n          <h4 className=\"text-[12px] font-[400]\">Business Name (Optional)</h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n          />\r\n        </div>\r\n\r\n        {/* <div className=\"mt-3\">\r\n                          <h4 className=\"text-[12px] font-[400]\">\r\n                            Description (Optional)\r\n                          </h4>\r\n                          <textarea\r\n                            placeholder=\"Add Note\"\r\n                            rows={5}\r\n                            className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                          />\r\n                        </div> */}\r\n\r\n        <div className=\"mt-3\">\r\n          <h4 className=\"text-[12px] font-[400]\">Business Type</h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Chart\"\r\n            className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreInfoGen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../store/store\";\r\nimport { UserApis } from \"../../../../apis/userApi/userApi\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LoadingSpinner from \"../../../../components/UI/LoadingSpinner\";\r\n\r\nconst DisplayInfoGen = () => {\r\n  const selectedStore = useSelector(\r\n    (state: RootState) => state.globalState?.selectedStore || null\r\n  );\r\n  console.log(\"Selected Store Code:\", selectedStore);\r\n  const sectionName = \"payment\";\r\n\r\n  const [currencies, setCurrencies] = useState<any>([]);\r\n  const [newCurrency, setNewCurrency] = useState<any>(\"\");\r\n  const [defaultCurrency, setDefaultCurrency] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  // const [message, setMessage] = useState(\"\");\r\n  // const [storeSettings, setStoreSettings] = useState<any>([]);\r\n\r\n  // const [currencyDisplay, setCurrencyDisplay] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!selectedStore) return;\r\n\r\n    setLoading(true);\r\n    UserApis.getStoreSettings(selectedStore, sectionName)\r\n      .then((response) => {\r\n        // console.log(response)\r\n        if (response?.data) {\r\n          const settings = response.data?.settings;\r\n          // setStoreSettings(settings);\r\n\r\n          // Populate the form fields with existing settings\r\n          setCurrencies(settings?.settings?.currencies || []);\r\n          setDefaultCurrency(settings?.settings.default_currency || \"\");\r\n          // setCurrencyDisplay(settings?.settings.currency_display || \"symbol\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching store settings:\", error);\r\n        toast.error(\"Failed to load store settings.\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [selectedStore, sectionName]);\r\n\r\n    // console.log(storeSettings)\r\n    \r\n  const handleAddCurrency = () => {\r\n    if (newCurrency && !currencies.includes(newCurrency)) {\r\n      setCurrencies([...currencies, newCurrency]);\r\n      setNewCurrency(\"\");\r\n    }\r\n  };\r\n\r\n  const handleRemoveCurrency = (currency: any) => {\r\n    setCurrencies(currencies.filter((c: any) => c !== currency));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!defaultCurrency || !currencies.includes(defaultCurrency)) {\r\n toast.error(\"Default currency must be in the currency list.\");\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      settings: {\r\n        currencies,\r\n        default_currency: defaultCurrency,\r\n        currency_display: \"symbol\",\r\n      },\r\n    };\r\n\r\n    setLoading(true);\r\n    // setMessage(\"\");\r\n\r\n    try {\r\n      const response = await UserApis.updateSettings(\r\n        selectedStore,\r\n        sectionName,\r\n        payload\r\n      );\r\n      console.log(response);\r\n      if (response?.status === 200 || response?.status === 201) {\r\n        // setMessage(\"Settings updated successfully!\");\r\n        toast.success(\r\n          response?.data?.message || \"Settings updated successfully!\"\r\n        );\r\n        // navigate(\"/dashboard/store\");\r\n        setLoading(false);\r\n      } else {\r\n        toast.error(response?.data?.message || \"Failed to create settings.\");\r\n        setLoading(false);\r\n      }\r\n    } catch (error) {\r\n      // setMessage(\"Error updating settings. Please try again.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bg-white rounded-[14px] pt-3 pb-4 pl-3 pr-5\">\r\n        <h4 className=\"text-[#000000] text-[14px] font-[600] pb-2\">\r\n          Update Payment Information\r\n        </h4>\r\n\r\n        <div className=\"max-w-lg mx-auto  space-y-4\">\r\n          {/* <h2 className=\"text-xl font-bold\">Update Payment Settings</h2> */}\r\n\r\n          <div className=\"flex items-center gap-2\">\r\n            <select\r\n              // type=\"text\"\r\n              className=\"w-full p-2  border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n              // className=\"border p-2 flex-grow rounded-md\"\r\n              // placeholder=\"Enter currency (e.g., USD)\"\r\n              value={newCurrency}\r\n              onChange={(e) => setNewCurrency(e.target.value.toUpperCase())}\r\n            >\r\n<option >NGN</option>\r\n<option value=\"NGN\">NGN</option>\r\n<option value=\"USD\">USD</option>\r\n              </select>\r\n            <button\r\n              className=\"bg-secondary text-white px-4 py-1 rounded-md\"\r\n              onClick={handleAddCurrency}\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            {currencies.map((currency: any) => (\r\n              <div\r\n                key={currency}\r\n                className=\"w-full flex justify-between  p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n\r\n                // className=\"flex justify-between p-2 border rounded-md\"\r\n              >\r\n                <span>{currency}</span>\r\n                <button\r\n                  className=\"text-red-500\"\r\n                  onClick={() => handleRemoveCurrency(currency)}\r\n                >\r\n                  ✕\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n<div className=\"mt-2\">\r\n          <label className=\"text-[13px]\">Select default Currency</label>\r\n\r\n          <select\r\n            className=\"w-full p-2 mt-1  border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n            // className=\"border p-2 w-full rounded-md\"\r\n            value={defaultCurrency}\r\n            onChange={(e) => setDefaultCurrency(e.target.value)}\r\n          >\r\n            \r\n            <option value=\"\">Select Default Currency</option>\r\n            {currencies.map((currency: any) => (\r\n              <option key={currency} value={currency}>\r\n                {currency}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          </div>\r\n          <button\r\n            className=\"bg-blue-500 text-white px-4 py-2 rounded-md w-full disabled:opacity-50 disabled:bg-gray-400\"\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <LoadingSpinner /> : \"Update Settings\"}\r\n          </button>\r\n\r\n          {/* {message && <p className=\"text-center mt-2\">{message}</p>} */}\r\n        </div>\r\n\r\n        {/* <div className=\"flex flex-col gap-2\">\r\n                          <div className=\"bg-[#FBFBFF] py-3 px-2\">\r\n                            <h4 className=\"text-[12px] font-[400]\">\r\n                              Ezeh Rachael, John Mustapha, Chukwu Yemi\r\n                            </h4>\r\n                          </div>\r\n                        </div> */}\r\n\r\n        {/* <div className=\"flex items-center bg-[#796BEB1A]/[10%] px-3 w-fit py-1 mt-3 rounded-[5px] gap-2\">\r\n                          <IoAddCircleOutline className=\"\" />\r\n        \r\n                          <h5 className=\"text-[10px] font-[400]\">New Customer</h5>\r\n                        </div> */}\r\n\r\n{/* <div>\r\n        <div className=\"\">\r\n          <h4 className=\"text-[12px] font-[400]\">Currency Display</h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n          />\r\n        </div>\r\n        <div className=\"flex items-center bg-[#796BEB1A]/[10%] px-3 w-fit py-1 mt-1 rounded-[5px] gap-2\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"customCheckbox\"\r\n            name=\"customCheckbox\"\r\n            className=\"w-4 h-4 text-primary bg-gray-100 border-gray-300 rounded focus:ring-blue-500 focus:ring-2\"\r\n          />\r\n          <h5 className=\"text-[10px] font-[400]\">\r\n            Allow Customers Choose Currency Display\r\n          </h5>\r\n        </div>\r\n\r\n        <h4 className=\"text-[#000000] mt-4 text-[14px] font-[600] pb-2\">\r\n          Unit System\r\n        </h4>\r\n        <div className=\"grid md:grid-cols-2 gap-3\">\r\n          <div className=\"mt-3\">\r\n            <h4 className=\"text-[12px] font-[400]\">Unit System</h4>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Metric System\"\r\n              className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n            />\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <h4 className=\"text-[12px] font-[400]\">Default Weight</h4>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-3\">\r\n          <h4 className=\"text-[12px] font-[400]\">Time zone</h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n          />\r\n        </div>\r\n        <div className=\"flex items-center bg-[#796BEB1A]/[10%] px-3 w-fit py-1 mt-3 rounded-[5px] gap-2\">\r\n          <h5 className=\"text-[10px] font-[400]\">\r\n            Sets time for recording of orders and analytics\r\n          </h5>\r\n        </div>\r\n\r\n        <div className=\"mt-3\">\r\n          <h4 className=\"text-[12px] font-[400]\">Language</h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"English UK\"\r\n            className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n          />\r\n        </div>\r\n        <div className=\"flex items-center bg-[#796BEB1A]/[10%] px-3 w-fit py-1 mt-1 rounded-[5px] gap-2\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"customCheckbox\"\r\n            name=\"customCheckbox\"\r\n            className=\"w-4 h-4 text-primary bg-gray-100 border-gray-300 rounded focus:ring-blue-500 focus:ring-2\"\r\n          />\r\n          <h5 className=\"text-[10px] font-[400]\">\r\n            Allow Customers Choose Currency Display\r\n          </h5>\r\n        </div>\r\n\r\n        <div className=\"mt-3\">\r\n          <h4 className=\"text-[12px] font-[400]\">Add Notes (Optional)</h4>\r\n          <textarea\r\n            placeholder=\"Add Note\"\r\n            rows={5}\r\n            className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n          />\r\n        </div>\r\n        </div> */}\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={2000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayInfoGen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { UserApis } from \"../../../../apis/userApi/userApi\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../store/store\";\r\nimport LoadingSpinner from \"../../../../components/UI/LoadingSpinner\";\r\ninterface ImageUploadProps {\r\n  image: string | null; // URL of the uploaded image\r\n  setImage: (image: string | null) => void; // Updates the image URL\r\n}\r\n\r\nconst BannerSettings = () => {\r\n  const selectedStore = useSelector(\r\n    (state: RootState) => state.globalState?.selectedStore || null\r\n  );\r\n\r\n  const sectionName = \"banner\";\r\n  const [image, setImage] = useState<any>(null);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [themeColor, setThemeColor] = useState(\"#ff0000\");\r\n  const [welcomeText, setWelcomeText] = useState(\r\n    \"Welcome to our premium store!\"\r\n  );\r\n  const [banners, setBanners] = useState<any>([\r\n    { image: null, title: \"\", description: \"\", cta_text: \"\", cta_link: \"\" },\r\n  ]);\r\n\r\n  // Apply theme color dynamically\r\n  useEffect(() => {\r\n    document.body.style.setProperty(\"--theme-color\", themeColor);\r\n  }, [themeColor]);\r\n\r\n  // Fetch settings from the API\r\n  useEffect(() => {\r\n    if (!selectedStore) return;\r\n\r\n    setLoading(true);\r\n    UserApis.getStoreSettings(selectedStore, sectionName)\r\n      .then((response) => {\r\n        if (response?.data?.settings) {\r\n          console.log(response?.data?.settings);\r\n          setThemeColor(\r\n            response.data?.settings.settings.theme_color || \"#ff0000\"\r\n          );\r\n          setWelcomeText(response.data?.settings.settings.welcome_text || \"\");\r\n          setBanners(response.data?.settings.settings.banners || []);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Failed to load store settings.\");\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [selectedStore]);\r\n\r\n  const ImageUpload: React.FC<ImageUploadProps> = ({ image, setImage }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleImageChange = async (\r\n      e: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      const file = e.target.files?.[0];\r\n      if (file) {\r\n        setLoading(true); // Show loading spinner or indicator\r\n\r\n        try {\r\n          // Create a FormData object\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"upload_preset\", \"urban_image\"); // Replace with your Cloudinary preset\r\n\r\n          // Upload to Cloudinary\r\n          const response = await fetch(\r\n            \"https://api.cloudinary.com/v1_1/dngyazspl/image/upload\",\r\n            {\r\n              method: \"POST\",\r\n              body: formData,\r\n            }\r\n          );\r\n\r\n          const result = await response.json();\r\n          if (result.secure_url) {\r\n            // Set the image URL in the state\r\n            setImage(result.secure_url);\r\n          }\r\n\r\n          setLoading(false); // Stop loading\r\n        } catch (error) {\r\n          console.error(\"Error uploading image\", error);\r\n          toast.error(\"Error uploading image. Please try again.\");\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"flex justify-center text-center\">\r\n        <label className=\"flex w-full bg-[#FBFBFF] border border-[#D8D8E2] flex-col items-center justify-center rounded-[5px] cursor-pointer relative\">\r\n          <div className=\"flex flex-col items-center justify-center h-[80px]\">\r\n            {image ? (\r\n              <img\r\n                className=\"\"\r\n                src={image} // This should now be the Cloudinary URL\r\n                alt=\"Uploaded logo\"\r\n                width={100}\r\n                height={100}\r\n              />\r\n            ) : (\r\n              <div className=\"flex justify-center items-center\">\r\n                <div className=\"flex flex-col\">\r\n                  <h4 className=\"text-[#9D9D9D] text-[12px] font-[400] \">\r\n                    Upload Logo Image here{\" \"}\r\n                  </h4>\r\n                  <h4 className=\"text-[#9D9D9D] text-[10px] font-[400] \">\r\n                    Recommended size 32px by 32px{\" \"}\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n              //   <img\r\n              //     className=\"\"\r\n              //     src=\"/onboarding/Icon.svg\" // Default placeholder image\r\n              //     alt=\"Default\"\r\n              //     width={100}\r\n              //     height={100}\r\n              //   />\r\n            )}\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/x-png,image/gif,image/jpeg\"\r\n            className=\"hidden mb-2 text-sm text-[#6C757D] font-medium\"\r\n            onChange={handleImageChange}\r\n          />\r\n        </label>\r\n        {loading && <p><LoadingSpinner /></p>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await UserApis.updateSettings(\r\n        selectedStore,\r\n        sectionName,\r\n        {\r\n          settings: {\r\n            theme_color: themeColor,\r\n            welcome_text: welcomeText,\r\n            banners,\r\n          },\r\n        }\r\n      );\r\n      if (response?.status === 200 || response?.status === 201) {\r\n        toast.success(\"Settings updated successfully!\");\r\n      } else {\r\n        toast.error(\"Failed to update settings.\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Error updating settings. Please try again.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleBannerChange = (index: number, field: string, value: string) => {\r\n    const updatedBanners = [...banners];\r\n    updatedBanners[index][field] = value;\r\n    setBanners(updatedBanners);\r\n  };\r\n\r\n  // const handleImageUpload = (index: number, e: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   if (e.target.files && e.target.files[0]) {\r\n  //     const file = e.target.files[0];\r\n  //     const updatedBanners = [...banners];\r\n  //     updatedBanners[index].image = file; // Save the file reference\r\n  //     setBanners(updatedBanners);\r\n  //   }\r\n  // };\r\n\r\n  const handleAddBanner = () => {\r\n    setBanners([\r\n      ...banners,\r\n      { image: null, title: \"\", description: \"\", cta_text: \"\", cta_link: \"\" },\r\n    ]);\r\n  };\r\n\r\n  const handleRemoveBanner = (index: number) => {\r\n    const updatedBanners = banners.filter((_: any, i: any) => i !== index);\r\n    setBanners(updatedBanners);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-[14px] p-6 shadow-lg\">\r\n      <h4 className=\"text-[#000000] text-[18px] font-bold pb-4\">\r\n        Update Store Settings\r\n      </h4>\r\n\r\n      <div>\r\n        {/* Theme Color */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block font-semibold\">Theme Color:</label>\r\n          <input\r\n            type=\"color\"\r\n            value={themeColor}\r\n            onChange={(e) => setThemeColor(e.target.value)}\r\n            className=\"w-full h-10 border rounded-md\"\r\n          />\r\n        </div>\r\n\r\n        {/* Welcome Text */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block font-semibold\">Welcome Text:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={welcomeText}\r\n            onChange={(e) => setWelcomeText(e.target.value)}\r\n            className=\"w-full h-12 border rounded-md p-2\"\r\n          />\r\n        </div>\r\n\r\n        {/* Banner Section */}\r\n        <div>\r\n          <h4 className=\"text-lg font-bold mb-2\">Banners:</h4>\r\n          {banners.map((banner: any, index: any) => (\r\n            <div key={index} className=\"border p-4 rounded-lg mb-4\">\r\n              {/* Banner Image */}\r\n              <label className=\"block font-semibold\">Banner Image:</label>\r\n              <ImageUpload image={image} setImage={setImage} />\r\n\r\n              {/* Title */}\r\n              <label className=\"block font-semibold\">Title:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={banner.title}\r\n                onChange={(e) =>\r\n                  handleBannerChange(index, \"title\", e.target.value)\r\n                }\r\n                className=\"w-full h-10 border rounded-md p-2 mb-2\"\r\n              />\r\n\r\n              {/* Description */}\r\n              <label className=\"block font-semibold\">Description:</label>\r\n              <textarea\r\n                value={banner.description}\r\n                onChange={(e) =>\r\n                  handleBannerChange(index, \"description\", e.target.value)\r\n                }\r\n                className=\"w-full h-16 border rounded-md p-2 mb-2\"\r\n              />\r\n\r\n              {/* CTA Text */}\r\n              <label className=\"block font-semibold\">CTA Text:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={banner.cta_text}\r\n                onChange={(e) =>\r\n                  handleBannerChange(index, \"cta_text\", e.target.value)\r\n                }\r\n                className=\"w-full h-10 border rounded-md p-2 mb-2\"\r\n              />\r\n\r\n              {/* CTA Link */}\r\n              <label className=\"block font-semibold\">CTA Link:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={banner.cta_link}\r\n                onChange={(e) =>\r\n                  handleBannerChange(index, \"cta_link\", e.target.value)\r\n                }\r\n                className=\"w-full h-10 border rounded-md p-2 mb-2\"\r\n              />\r\n\r\n              {/* Remove Button */}\r\n              {banners.length > 1 && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleRemoveBanner(index)}\r\n                  className=\"bg-red-500 text-white py-1 px-3 rounded-md\"\r\n                >\r\n                  Remove Banner\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))}\r\n\r\n          {/* Add Banner Button */}\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleAddBanner}\r\n            className=\"bg-blue-500 text-white py-2 px-4 rounded-md\"\r\n          >\r\n            Add Banner\r\n          </button>\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSubmit}\r\n          disabled={loading}\r\n          className=\"bg-green-500 text-white py-2 px-6 rounded-md mt-4 w-full\"\r\n        >\r\n          {loading ? \"Saving...\" : \"Save Settings\"}\r\n        </button>\r\n      </div>\r\n         <ToastContainer\r\n              position=\"top-right\"\r\n              autoClose={2000}\r\n              hideProgressBar={true}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n            />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerSettings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../store/store\";\r\nimport { UserApis } from \"../../../../apis/userApi/userApi\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport LoadingSpinner from \"../../../../components/UI/LoadingSpinner\";\r\n\r\ninterface ImageUploadProps {\r\n  image: string | null; // URL of the uploaded image\r\n  setImage: (image: string | null) => void; // Updates the image URL\r\n}\r\nconst LogoSettings = () => {\r\n  const selectedStore = useSelector(\r\n    (state: RootState) => state.globalState?.selectedStore || null\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const sectionName = \"logo\";\r\n  const [image, setImage] = useState<any>(null);\r\n  // const [data, setData] = useState<any>([]);\r\n\r\n  // Fetch settings from the API\r\n  useEffect(() => {\r\n    if (!selectedStore) return;\r\n\r\n    setLoading(true);\r\n    UserApis.getStoreSettings(selectedStore, sectionName)\r\n      .then((response) => {\r\n        if (response?.data?.settings) {\r\n          console.log(response?.data?.settings);\r\n          setImage(response?.data?.settings?.settings?.logo);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Failed to load store settings.\");\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [selectedStore]);\r\n\r\n  const ImageUpload: React.FC<ImageUploadProps> = ({ image, setImage }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleImageChange = async (\r\n      e: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      const file = e.target.files?.[0];\r\n      if (file) {\r\n        setLoading(true); // Show loading spinner or indicator\r\n\r\n        try {\r\n          // Create a FormData object\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"upload_preset\", \"urban_image\"); // Replace with your Cloudinary preset\r\n\r\n          // Upload to Cloudinary\r\n          const response = await fetch(\r\n            \"https://api.cloudinary.com/v1_1/dngyazspl/image/upload\",\r\n            {\r\n              method: \"POST\",\r\n              body: formData,\r\n            }\r\n          );\r\n\r\n          const result = await response.json();\r\n          if (result.secure_url) {\r\n            // Set the image URL in the state\r\n            setImage(result.secure_url);\r\n          }\r\n\r\n          setLoading(false); // Stop loading\r\n        } catch (error) {\r\n          console.error(\"Error uploading image\", error);\r\n          toast.error(\"Error uploading image. Please try again.\");\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"flex justify-center text-center\">\r\n        <label className=\"flex w-full bg-[#FBFBFF] border border-[#D8D8E2] flex-col items-center justify-center rounded-[5px] cursor-pointer relative\">\r\n          <div className=\"flex flex-col items-center justify-center h-[80px]\">\r\n            {image ? (\r\n              <img\r\n                className=\"\"\r\n                src={image} // This should now be the Cloudinary URL\r\n                alt=\"Uploaded logo\"\r\n                width={100}\r\n                height={100}\r\n              />\r\n            ) : (\r\n              <div className=\"flex justify-center items-center\">\r\n                <div className=\"flex flex-col\">\r\n                  <h4 className=\"text-[#9D9D9D] text-[12px] font-[400] \">\r\n                    Upload Logo Image here{\" \"}\r\n                  </h4>\r\n                  <h4 className=\"text-[#9D9D9D] text-[10px] font-[400] \">\r\n                    Recommended size 32px by 32px{\" \"}\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n              //   <img\r\n              //     className=\"\"\r\n              //     src=\"/onboarding/Icon.svg\" // Default placeholder image\r\n              //     alt=\"Default\"\r\n              //     width={100}\r\n              //     height={100}\r\n              //   />\r\n            )}\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/x-png,image/gif,image/jpeg\"\r\n            className=\"hidden mb-2 text-sm text-[#6C757D] font-medium\"\r\n            onChange={handleImageChange}\r\n          />\r\n        </label>\r\n        {loading && <p><LoadingSpinner /></p>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await UserApis.updateSettings(\r\n        selectedStore,\r\n        sectionName,\r\n        {\r\n          settings: {\r\n            logo: image,\r\n          },\r\n        }\r\n      );\r\n      if (response?.status === 200 || response?.status === 201) {\r\n        toast.success(\"Settings updated successfully!\");\r\n      } else {\r\n        toast.error(\"Failed to update settings.\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Error updating settings. Please try again.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <div className=\"bg-white rounded-[14px] p-6 shadow-lg\">\r\n      <h4 className=\"text-[#000000] text-[18px] font-bold pb-4\">Update Logo</h4>\r\n\r\n      <div>\r\n        {/* Banner Section */}\r\n        <div>\r\n          <ImageUpload image={image} setImage={setImage} />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSubmit}\r\n          disabled={loading}\r\n          className=\"bg-green-500 text-white py-2 px-6 rounded-md mt-4 w-full\"\r\n        >\r\n          {loading ? \"Saving...\" : \"Save Settings\"}\r\n        </button>\r\n      </div>\r\n         <ToastContainer\r\n              position=\"top-right\"\r\n              autoClose={2000}\r\n              hideProgressBar={true}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n            />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogoSettings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../../store/store\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { UserApis } from \"../../../../apis/userApi/userApi\";\r\n\r\nconst SocialAndContact = () => {\r\n  const selectedStore = useSelector(\r\n    (state: RootState) => state.globalState?.selectedStore || null\r\n  );\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    facebook: \"\",\r\n    twitter: \"\",\r\n    instagram: \"\",\r\n    youtube: \"\",\r\n    tiktok: \"\",\r\n  });\r\n\r\n  const sectionName = \"contacts\";\r\n\r\n  // Fetch settings from the API\r\n  useEffect(() => {\r\n    if (!selectedStore) return;\r\n\r\n    setLoading(true);\r\n    UserApis.getStoreSettings(selectedStore, sectionName)\r\n      .then((response) => {\r\n        console.log(response)\r\n        if (response?.data?.settings) {\r\n          setFormData((prev) => ({\r\n            ...prev,\r\n            ...response.data.settings.settings, // Populate state with API response\r\n          }));\r\n        }\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Failed to load store settings.\");\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, [selectedStore]);\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await UserApis.updateSettings(selectedStore, sectionName, {\r\n        settings: formData,\r\n      });\r\n\r\n      if (response?.status === 200 || response?.status === 201) {\r\n        toast.success(\"Settings updated successfully!\");\r\n      } else {\r\n        toast.error(\"Failed to update settings.\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Error updating settings. Please try again.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-[14px] p-6 shadow-lg\">\r\n      <h4 className=\"text-[#000000] text-[18px] font-bold pb-4\">\r\n        Update Contacts and Socials\r\n      </h4>\r\n\r\n      <div>\r\n        {/* Contacts Section */}\r\n        <div className=\"border p-4 rounded-lg mb-4\">\r\n          <h5 className=\"font-semibold mb-2\">Contacts</h5>\r\n\r\n          <label className=\"block font-semibold\">Phone Number:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phoneNumber\"\r\n            value={formData.phoneNumber}\r\n            onChange={handleChange}\r\n            className=\"w-full h-10 border rounded-md p-2 mb-2\"\r\n          />\r\n\r\n          <label className=\"block font-semibold\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className=\"w-full h-10 border rounded-md p-2 mb-2\"\r\n          />\r\n\r\n          <label className=\"block font-semibold\">Address:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            value={formData.address}\r\n            onChange={handleChange}\r\n            className=\"w-full h-10 border rounded-md p-2 mb-2\"\r\n          />\r\n        </div>\r\n\r\n        {/* Social Media Section */}\r\n        <div className=\"border p-4 rounded-lg mb-4\">\r\n          <h5 className=\"font-semibold mb-2\">Social Media Links</h5>\r\n\r\n          <label className=\"block font-semibold\">Facebook:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"facebook\"\r\n            value={formData.facebook}\r\n            onChange={handleChange}\r\n            className=\"w-full h-10 border rounded-md p-2 mb-2\"\r\n          />\r\n\r\n          <label className=\"block font-semibold\">Twitter:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"twitter\"\r\n            value={formData.twitter}\r\n            onChange={handleChange}\r\n            className=\"w-full h-10 border rounded-md p-2 mb-2\"\r\n          />\r\n\r\n          <label className=\"block font-semibold\">Instagram:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"instagram\"\r\n            value={formData.instagram}\r\n            onChange={handleChange}\r\n            className=\"w-full h-10 border rounded-md p-2 mb-2\"\r\n          />\r\n\r\n          <label className=\"block font-semibold\">YouTube:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"youtube\"\r\n            value={formData.youtube}\r\n            onChange={handleChange}\r\n            className=\"w-full h-10 border rounded-md p-2 mb-2\"\r\n          />\r\n\r\n          <label className=\"block font-semibold\">TikTok:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tiktok\"\r\n            value={formData.tiktok}\r\n            onChange={handleChange}\r\n            className=\"w-full h-10 border rounded-md p-2 mb-2\"\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSubmit}\r\n          disabled={loading}\r\n          className=\"bg-green-500 text-white py-2 px-6 rounded-md mt-4 w-full\"\r\n        >\r\n          {loading ? \"Saving...\" : \"Save Settings\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Toast Notifications */}\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={2000}\r\n        hideProgressBar\r\n        closeOnClick\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialAndContact;\r\n","import React from \"react\";\r\nimport DashboardLayout from \"../../../../components/DashboardLayout\";\r\nimport StoreInfoGen from \"../../products/inner/StoreInfoGen\";\r\nimport DisplayInfoGen from \"../../products/inner/DisplayInfoGen\";\r\nimport BannerSettings from \"./BannerSettings\";\r\nimport LogoSettings from \"./LogoSettings\";\r\nimport SocialAndContact from \"./SocialAndContact\";\r\n\r\nconst GeneralInfo = () => {\r\n  return (\r\n    <DashboardLayout>\r\n      <div className=\"grid lg:grid-cols-12 gap-3 pb-6\">\r\n        <div className=\"col-span-8 flex flex-col gap-3\">\r\n          <LogoSettings />\r\n          <StoreInfoGen />\r\n          <DisplayInfoGen />\r\n          <BannerSettings />\r\n          <SocialAndContact />\r\n        </div>\r\n        <div className=\"col-span-4\"></div>\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default GeneralInfo;\r\n"],"names":["props","_jsxs","role","className","viewBox","fill","xmlns","children","_jsx","d","StoreInfoGen","type","placeholder","DisplayInfoGen","selectedStore","useSelector","state","_state$globalState","globalState","console","log","sectionName","currencies","setCurrencies","useState","newCurrency","setNewCurrency","defaultCurrency","setDefaultCurrency","loading","setLoading","useEffect","UserApis","getStoreSettings","then","response","data","_response$data","_settings$settings","settings","default_currency","catch","error","toast","finally","value","onChange","e","target","toUpperCase","onClick","handleAddCurrency","includes","map","currency","filter","c","handleRemoveCurrency","async","payload","currency_display","updateSettings","_response$data2","_response$data3","status","success","message","disabled","LoadingSpinner","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","BannerSettings","image","setImage","themeColor","setThemeColor","welcomeText","setWelcomeText","banners","setBanners","title","description","cta_text","cta_link","document","body","style","setProperty","_response$data4","_response$data5","theme_color","welcome_text","ImageUpload","_ref","src","alt","width","height","accept","_e$target$files","file","files","formData","FormData","append","fetch","method","result","json","secure_url","handleBannerChange","index","field","updatedBanners","banner","length","_","i","handleRemoveBanner","handleAddBanner","LogoSettings","_response$data3$setti","_response$data3$setti2","logo","SocialAndContact","setFormData","phoneNumber","email","address","facebook","twitter","instagram","youtube","tiktok","prev","_objectSpread","handleChange","name","GeneralInfo","DashboardLayout"],"sourceRoot":""}