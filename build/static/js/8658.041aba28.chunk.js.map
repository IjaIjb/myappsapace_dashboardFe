{"version":3,"file":"static/js/8658.041aba28.chunk.js","mappings":"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","sources":["components/UI/LoadingSpinner.tsx","pages/dashboard/products/CreateProduct.tsx","pages/dashboard/products/inner/VariantTable.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst LoadingSpinner = (props: Props) => {\r\n  return (\r\n    <svg\r\n      role=\"status\"\r\n      className=\"inline w-5 h-5 mr-2 text-gray-200 animate-spin  fill-gray-600 \"\r\n      viewBox=\"0 0 100 101\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n        fill=\"currentFill\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DashboardLayout from \"../../../components/DashboardLayout\";\r\nimport { IoAddCircleOutline } from \"react-icons/io5\";\r\nimport { MdInfo } from \"react-icons/md\";\r\nimport VariantTable from \"./inner/VariantTable\";\r\nimport { UserApis } from \"../../../apis/userApi/userApi\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../../../components/UI/LoadingSpinner\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../store/store\";\r\n// import LoadingSpinnerPage from \"../../../components/UI/LoadingSpinnerPage\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface MediaProps {\r\n  id: number;\r\n  file: File | null;\r\n}\r\n\r\nconst CreateProduct = () => {\r\n  const navigate = useNavigate();\r\n  const selectedStore = useSelector(\r\n    (state: RootState) => state.globalState?.selectedStore || null\r\n  );\r\n  console.log(\"Selected Store Code:\", selectedStore);\r\n  const sectionName = \"payment\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // const [categoryLogo, setCategoryLogo] = useState<File | null>(null);\r\n  const [isActive, setIsActive] = useState<any>(true);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const [currencies, setCurrencies] = useState<any>([]);\r\n  // const [newCurrency, setNewCurrency] = useState<any>(\"\");\r\n  // const [defaultCurrency, setDefaultCurrency] = useState(\"\");\r\n  //   const [storeSettings, setStoreSettings] = useState<any>([]);\r\n\r\n  const onOpenModal = () => {\r\n    // e.preventDefault();\r\n    setOpen(true);\r\n  };\r\n  const onCloseModal = () => setOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (!selectedStore || !currencies || currencies.length === 0) {\r\n      onOpenModal();\r\n    } else {\r\n      onCloseModal();\r\n    }\r\n  }, [selectedStore, currencies]);\r\n  // const [stores, setStores] = useState<any>([]);\r\n  const [category, setCategory] = useState<any>([]);\r\n  const [formValues, setFormValues] = useState<any>({\r\n    product_name: \"\",\r\n    product_description: \"\",\r\n    store_code: \"\",\r\n    product_short_description: \"\",\r\n    tags: \"\",\r\n    product_images: [],\r\n    category_id: \"\",\r\n    product_type_id: \"2\",\r\n    selling_price: {},\r\n    cost_price: {},\r\n    stock_quantity: \"\",\r\n    stock_unit: \"\",\r\n    vendor: \"\",\r\n    collection_id: \"\",\r\n    product_status: \"active\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!selectedStore) {\r\n      toast.error(\"Please select a store\");\r\n      return;\r\n    }\r\n    // Reset currencies immediately\r\n    setCurrencies([]);\r\n    setLoader(true);\r\n    UserApis.getStoreSettings(selectedStore, sectionName)\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response?.data) {\r\n          const settings = response.data?.settings.settings;\r\n  \r\n          // Populate the form fields with existing settings\r\n          setCurrencies(settings.currencies || []);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching store settings:\", error);\r\n        toast.error(\"Failed to load store settings.\");\r\n      })\r\n      .finally(() => {\r\n        setLoader(false);\r\n      });\r\n  }, [selectedStore, sectionName]);\r\n  \r\n  // Handle input changes for selling and cost price dynamically\r\n  const handlePriceChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    priceType: \"selling_price\" | \"cost_price\",\r\n    currency: string\r\n  ) => {\r\n    const { value } = e.target;\r\n\r\n    setFormValues((prev: any) => ({\r\n      ...prev,\r\n      [priceType]: {\r\n        ...prev[priceType],\r\n        [currency]: value,\r\n      },\r\n    }));\r\n  };\r\n  // useEffect(() => {\r\n  //   UserApis.getStore()\r\n  //     .then((response) => {\r\n  //       if (response?.data) {\r\n  //         setStores(response?.data || []); // Adjusting to your API response structure\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => console.error(\"Error fetching stores:\", error));\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    UserApis.getCategory(selectedStore)\r\n      .then((response) => {\r\n        if (response?.data) {\r\n          setCategory(response?.data || []); // Adjusting to your API response structure\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error fetching stores:\", error));\r\n  }, [selectedStore]);\r\n  console.log(category);\r\n  const handleInputChange = (\r\n    e: React.ChangeEvent<\r\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\r\n    >\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setFormValues((prev: any) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   const file = e.target.files?.[0];\r\n  //   if (file) {\r\n  //     setCategoryLogo(file);\r\n  //   }\r\n  // };\r\n\r\n  const [media, setMedia] = useState<MediaProps[]>(\r\n    Array(8)\r\n      .fill(null)\r\n      .map((_, idx) => ({ id: idx, file: null }))\r\n  );\r\n\r\n  //   const handleFileChange = (file: File, id: number) => {\r\n  //     setMedia((prev) =>\r\n  //       prev.map((item) => (item.id === id ? { ...item, file } : item))\r\n  //     );\r\n  //   };\r\n  const handleFileChange = (file: File, id: number) => {\r\n    setFormValues((prev: any) => ({\r\n      ...prev,\r\n      product_images: [...prev.product_images, file], // Append the new file\r\n    }));\r\n\r\n    setMedia((prev) =>\r\n      prev.map((item) => (item.id === id ? { ...item, file } : item))\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n\r\n    const formData = new FormData();\r\n    // if (categoryLogo) {\r\n    //   formData.append(\"category_image\", categoryLogo);\r\n    // }\r\n    formData.append(\"product_name\", formValues.product_name);\r\n    formData.append(\"product_description\", formValues.product_description);\r\n    formData.append(\r\n      \"product_short_description\",\r\n      formValues.product_short_description\r\n    );\r\n    formData.append(\"tags\", formValues.tags);\r\n    formData.append(\"selling_price\", JSON.stringify(formValues.selling_price));\r\n    formData.append(\"cost_price\", JSON.stringify(formValues.cost_price));\r\n    // formData.append(\"product_type_id\", formValues.product_type_id);\r\n    formData.append(\"category_id\", formValues.category_id);\r\n    formData.append(\"stock_quantity\", formValues.stock_quantity);\r\n    formData.append(\"stock_unit\", formValues.stock_unit);\r\n    formData.append(\"vendor\", formValues.vendor);\r\n    formData.append(\"product_status\", isActive ? \"active\" : \"inactive\");\r\n\r\n    // Ensure the correct product_type_id\r\n    // formData.append(\r\n    //   \"product_type_id\",\r\n    //   String(Number(formValues.product_type_id) || 2)\r\n    // );\r\n\r\n    // Append images correctly\r\n    media.forEach(({ file }, index) => {\r\n      if (file) {\r\n        formData.append(`product_images[${index}]`, file);\r\n      }\r\n    });\r\n    // console.log(\"Submitting payload:\", formValues);\r\n    // console.log(\"Submitting payload:\", formData);\r\n\r\n    try {\r\n      console.log(\"Submitting payload:\", formValues);\r\n\r\n      const response: any = await UserApis.createProduct(\r\n        selectedStore,\r\n        formData\r\n      );\r\n      console.log(response);\r\n\r\n      if (response?.data) {\r\n        toast.success(\r\n          response?.data?.message || \"Category created successfully!\"\r\n        );\r\n        setLoader(false);\r\n\r\n        navigate(\"/dashboard/products\");\r\n      } else {\r\n        toast.error(response?.data?.message || \"Failed to create category.\");\r\n        setLoader(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating category:\", error);\r\n      toast.error(\"An error occurred while creating the category.\");\r\n      setLoader(false);\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  };\r\nconsole.log(currencies)\r\n  return (\r\n    <div>\r\n              <Modal\r\n        classNames={{\r\n          modal: \"rounded-[10px] overflow-visible relative\",\r\n        }}\r\n        open={open}\r\n        onClose={() => {}} // Prevents closing the modal\r\n        closeOnEsc={false} // Prevent closing with the Escape key\r\n        closeOnOverlayClick={false} // Prevent closing by clicking outside\r\n        showCloseIcon={false} // Hides the close button\r\n         center\r\n      >\r\n        <div className=\"px-2 md:px-5  h-[100px] flex justify-center items-center  text-center\">\r\n       {!selectedStore ? (\r\n  <div>\r\n  <h4 className=\"text-[20px] font-[600] mb-4\">Don't have a Store?</h4>\r\n<Link to=\"/dashboard/create-store\" className=\"underline text-blue-800\">Create a Store</Link>\r\n</div>\r\n       ) : (\r\n        <div>\r\n        <h4 className=\"text-[20px] font-[600] mb-4\">Don't have a Currency?</h4>\r\n      <Link to=\"/dashboard/settings/general-information\" className=\"underline text-blue-800\">Set Currency</Link>\r\n      </div>\r\n       )}\r\n       \r\n        </div>\r\n      </Modal>\r\n      <DashboardLayout>\r\n        <div>\r\n          <form\r\n            onSubmit={handleSubmit}\r\n            className=\"grid lg:grid-cols-12 gap-3 pb-6\"\r\n          >\r\n            <div className=\"lg:col-span-8 flex flex-col gap-3\">\r\n              {/* <TitleProduct /> */}\r\n              <div className=\"bg-white rounded-[14px] pt-3 pb-4 pl-3 pr-5\">\r\n                <div className=\"\">\r\n                  <h4 className=\"text-[12px] font-[400]\">Title</h4>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"product_name\"\r\n                    value={formValues.product_name}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Title\"\r\n                    required\r\n                    className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mt-3\">\r\n                  <h4 className=\"text-[12px] font-[400]\">\r\n                    Short Description (Optional)\r\n                  </h4>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"product_description\"\r\n                    value={formValues.product_description}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Title\"\r\n                    className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mt-3\">\r\n                  <h4 className=\"text-[12px] font-[400]\">\r\n                    Description (Optional)\r\n                  </h4>\r\n                  <textarea\r\n                    placeholder=\"Add Note\"\r\n                    name=\"product_short_description\"\r\n                    value={formValues.product_short_description}\r\n                    onChange={handleInputChange}\r\n                    rows={5}\r\n                    className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mt-3\">\r\n                  <h3 className=\"text-[12px] font-[400] pb-1\">Media</h3>\r\n                  <div className=\"mb-2 flex gap-1 items-center \">\r\n                    <MdInfo className=\"text-[#6B65E9]\" />\r\n                    <h4 className=\"text-[10px] font-[400] text-[#9D9D9D]\">\r\n                      {\" \"}\r\n                      Recommended dimension: 930px x 1163px, Max file size: 5mb\r\n                    </h4>\r\n                  </div>\r\n                  <div className=\"grid grid-cols-4 gap-4\">\r\n                    {media.map(({ id, file }) => (\r\n                      <div\r\n                        key={id}\r\n                        className=\"relative flex items-center justify-center w-full h-32 border-2 border-dashed border-gray-300 rounded-md cursor-pointer hover:border-blue-400\"\r\n                      >\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/x-png,image/gif,image/jpeg,application/pdf,video/*\"\r\n                          name={`product_images_${id}`}\r\n                          // required\r\n                          className=\"absolute inset-0 opacity-0 cursor-pointer\"\r\n                          onChange={(e) => {\r\n                            if (e.target.files && e.target.files[0]) {\r\n                              handleFileChange(e.target.files[0], id);\r\n                            }\r\n                          }}\r\n                        />\r\n                        {file ? (\r\n                          <img\r\n                            src={URL.createObjectURL(file)}\r\n                            alt=\"Uploaded Preview\"\r\n                            className=\"object-cover w-full h-full rounded-md\"\r\n                          />\r\n                        ) : (\r\n                          <div className=\"flex flex-col items-center text-gray-400\">\r\n                            <img\r\n                              aria-hidden=\"true\"\r\n                              src=\"/images/products/imageProduct.svg\"\r\n                              alt=\"Placeholder\"\r\n                              className=\"w-12 h-12\"\r\n                            />\r\n                            <span className=\"text-sm\">Upload Image</span>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-3\">\r\n                  <h4 className=\"text-[12px] font-[400]\">Category</h4>\r\n                  <select\r\n                    name=\"category_id\"\r\n                    value={formValues.category_id}\r\n                    //   placeholder=\"CHRISTMAS BABY\"\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                  >\r\n                    <option value=\"\" disabled>\r\n                      Select category\r\n                    </option>\r\n                    {category?.categories?.data?.map((cat: any) => (\r\n                      <option key={cat.id} value={cat.id}>\r\n                        {cat.category_name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"flex items-center bg-[#796BEB1A]/[10%] px-3 w-fit py-1 mt-2 rounded-[5px] gap-2\">\r\n                  <IoAddCircleOutline className=\"\" />\r\n\r\n                  <h5 className=\"text-[10px] font-[400]\">New Product</h5>\r\n                </div>\r\n\r\n                <div className=\"mt-3\">\r\n                  <h4 className=\"text-[12px] font-[400]\">\r\n                    Size Chart (Optional)\r\n                  </h4>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Chart\"\r\n                    className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {/* <ProductPrice /> */}\r\n              <div className=\"bg-white rounded-[14px] pt-3 pb-4 pl-3 pr-5\">\r\n                <h4 className=\"text-[#000000] text-[14px] font-[600] pb-2\">\r\n                  Product Price\r\n                </h4>\r\n\r\n                <div className=\"grid md:grid-cols-2 gap-3\">\r\n                  {/* Left side - Selling Prices */}\r\n                  <div>\r\n                    {currencies.map((currency: any) => (\r\n                      <div key={currency} className=\"mb-3\">\r\n                        <h4 className=\"text-[12px] font-[400]\">\r\n                          Selling Price ({currency})\r\n                        </h4>\r\n                        <input\r\n                          type=\"number\"\r\n                          name={`selling_price_${currency}`}\r\n                          value={formValues.selling_price[currency] || \"\"}\r\n                          onChange={(e) =>\r\n                            handlePriceChange(e, \"selling_price\", currency)\r\n                          }\r\n                          placeholder={`Selling Price in ${currency}`}\r\n                          required\r\n                          className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  {/* Right side - Cost Prices */}\r\n                  <div>\r\n                    {currencies.map((currency: any) => (\r\n                      <div key={currency} className=\"mb-3\">\r\n                        <h4 className=\"text-[12px] font-[400]\">\r\n                          Cost Price ({currency})\r\n                        </h4>\r\n                        <input\r\n                          type=\"number\"\r\n                          name={`cost_price_${currency}`}\r\n                          value={formValues.cost_price[currency] || \"\"}\r\n                          onChange={(e) =>\r\n                            handlePriceChange(e, \"cost_price\", currency)\r\n                          }\r\n                          placeholder={`Cost Price in ${currency}`}\r\n                          required\r\n                          className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <Variants /> */}\r\n              <div className=\"bg-white rounded-[14px] pt-3 pb-4 pl-3 pr-5\">\r\n                <h4 className=\"text-[#000000] text-[14px] font-[600] pb-2\">\r\n                  Variants\r\n                </h4>\r\n\r\n                <h5 className=\"text-[12px] font-[400] pt-5\">Colour</h5>\r\n                <div className=\"flex gap-2 border-b pb-4\">\r\n                  <div className=\"flex items-center bg-[#796BEB1A]/[10%] px-2 w-fit py-1 mt-2 rounded-[5px] gap-2\">\r\n                    <div className=\"w-4 h-4 bg-[#3491DE] rounded-[2px]\"></div>\r\n                    <h5 className=\"text-[10px] font-[400]\">Blue</h5>\r\n                  </div>\r\n                  <div className=\"flex items-center bg-[#796BEB1A]/[10%] px-2 w-fit py-1 mt-2 rounded-[5px] gap-2\">\r\n                    <div className=\"w-4 h-4 bg-purple-500 rounded-[2px]\"></div>\r\n                    <h5 className=\"text-[10px] font-[400]\">Purple</h5>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center bg-[#796BEB1A]/[10%] px-3 w-fit py-1 mt-2 rounded-[5px] gap-2\">\r\n                    <IoAddCircleOutline className=\"\" />\r\n\r\n                    <h5 className=\"text-[10px] font-[400]\">Add Color</h5>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center bg-[#796BEB1A]/[10%] px-3 w-fit py-1 mt-4 rounded-[5px] gap-2\">\r\n                  <IoAddCircleOutline className=\"\" />\r\n\r\n                  <h5 className=\"text-[10px] font-[400]\">Add Another Option</h5>\r\n                </div>\r\n\r\n                <VariantTable />\r\n              </div>\r\n              {/* <ProductInventory /> */}\r\n              <div className=\"bg-white rounded-[14px] pt-3 pb-4 pl-3 pr-5\">\r\n                <h4 className=\"text-[#000000] text-[14px] font-[600] pb-2\">\r\n                  Product Inventory\r\n                </h4>\r\n\r\n                <div className=\"grid md:grid-cols-2 gap-3\">\r\n                  <div className=\"\">\r\n                    <h4 className=\"text-[12px] font-[400]\">Stock Quantity</h4>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"stock_quantity\"\r\n                      value={formValues.stock_quantity}\r\n                      onChange={handleInputChange}\r\n                      placeholder=\"Title\"\r\n                      required\r\n                      className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"\">\r\n                    <h4 className=\"text-[12px] font-[400]\">Stock Unit</h4>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"stock_unit\"\r\n                      value={formValues.stock_unit}\r\n                      onChange={handleInputChange}\r\n                      placeholder=\"Title\"\r\n                      required\r\n                      className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"lg:col-span-4 flex flex-col gap-3\">\r\n              <div className=\"bg-white rounded-[14px] pt-3 pb-4 pl-3 pr-5\">\r\n                <h4 className=\"text-[#000000] text-[14px] font-[600] pb-2\">\r\n                  Product Status\r\n                </h4>\r\n                <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={isActive}\r\n                    name=\"product_status\"\r\n                    onChange={() => setIsActive(!isActive)}\r\n                    className=\"sr-only peer\"\r\n                  />\r\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-primary/20  rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all  peer-checked:bg-[#02B718]\"></div>\r\n\r\n                  <span className=\"ml-3 text-gray-800\">\r\n                    {isActive ? \"Active\" : \"Inactive\"}\r\n                  </span>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"bg-white rounded-[14px] pt-3 pb-4 pl-3 pr-5\">\r\n                <h4 className=\"text-[#000000] text-[14px] font-[600] pb-2\">\r\n                  Product Sales Summary\r\n                </h4>\r\n\r\n                <div className=\"\">\r\n                  <h4 className=\"text-[12px] font-[400]\">Product Type</h4>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"product_type_id\"\r\n                    value={formValues.product_type_id}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Title\"\r\n                    className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"\">\r\n                  <h4 className=\"text-[12px] font-[400]\">Vendor</h4>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"vendor\"\r\n                    value={formValues.vendor}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Title\"\r\n                    className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"\">\r\n                  <h4 className=\"text-[12px] font-[400]\">Collection</h4>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"collection_id\"\r\n                    value={formValues.collection_id}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Title\"\r\n                    className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"\">\r\n                  <h4 className=\"text-[12px] font-[400]\">Tags</h4>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"tags\"\r\n                    value={formValues.tags}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Title\"\r\n                    className=\"w-full p-2 mt-2 border text-[12px] font-[400] text-black border-[#D8D8E2] bg-[#FBFBFF] rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Submit Button */}\r\n              <div className=\"flex justify-end \">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={loader}\r\n                  className={`disabled:bg-gray-500 flex gap-2 items-center py-2 w-fit px-6 bg-secondary text-white rounded-full hover:bg-secondary/[70%]`}\r\n                >\r\n                  {loader ? <LoadingSpinner /> : \"Proceed\"}\r\n                  {!loader && <FaArrowRight />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <ToastContainer\r\n              position=\"bottom-left\"\r\n              autoClose={2000}\r\n              hideProgressBar={true}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n            />\r\n          </form>\r\n        </div>\r\n      </DashboardLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n","import React, { useState } from \"react\";\r\nimport { IoAddCircleOutline } from \"react-icons/io5\";\r\n\r\ninterface Variant {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n  available: string;\r\n}\r\n\r\nconst VariantTable = () => {\r\n  const [variants, setVariants] = useState<Variant[]>([\r\n    { id: 1, name: \"Blue\", price: \"$13.99\", available: \"\" },\r\n    { id: 2, name: \"Purple\", price: \"$13.99\", available: \"\" },\r\n  ]);\r\n\r\n  const addVariant = () => {\r\n    setVariants([\r\n      ...variants,\r\n      { id: variants.length + 1, name: \"\", price: \"\", available: \"\" },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-4\">\r\n        <div className=\"\">\r\n          <div className=\"flex justify-end pb-3\">\r\n            <button\r\n              onClick={addVariant}\r\n              className=\"flex items-center bg-[#796BEB1A]/[10%] px-3 w-fit py-1 mt-4 rounded-[5px] gap-2\"\r\n            >\r\n              <IoAddCircleOutline className=\"\" />\r\n\r\n              <h5 className=\"text-[10px] font-[400]\">Add Variant</h5>\r\n            </button>\r\n            {/* <button\r\n        onClick={addVariant}\r\n        className=\"mt-4 flex items-center gap-2 bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 focus:ring focus:ring-indigo-300 focus:outline-none\"\r\n      >\r\n        Add Variant\r\n      </button> */}\r\n          </div>\r\n          <table className=\"w-fit \">\r\n            <thead className=\"w-full\">\r\n              <tr className=\"bg-[#F1F1FB] w-full rounded-[6px]\">\r\n                <th className=\"px-4 py-2 text-left font-medium text-gray-700\">\r\n                  Variant\r\n                </th>\r\n                <th className=\"px-4 py-2 text-left font-medium text-gray-700\">\r\n                  Price\r\n                </th>\r\n                <th className=\"px-4 py-2 text-left font-medium text-gray-700\">\r\n                  Available\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {variants.map((variant) => (\r\n                <tr\r\n                  key={variant.id}\r\n                  className=\" border-gray-200 w-fit hover:bg-gray-50\"\r\n                >\r\n                  <td className=\" py-2 flex items-center gap-4\">\r\n                    <div className=\"w-10 h-10 bg-gray-200 rounded-md flex justify-center items-center\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-6 w-6 text-gray-400\"\r\n                        viewBox=\"0 0 20 20\"\r\n                        fill=\"currentColor\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm10 2a3 3 0 11-6 0 3 3 0 016 0zm-4 7a4 4 0 01-4-4H4a5 5 0 005 5v-1zm2 0v1a5 5 0 005-5h-2a4 4 0 01-4 4z\"\r\n                          clipRule=\"evenodd\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={variant.name}\r\n                      onChange={(e) =>\r\n                        setVariants(\r\n                          variants.map((v) =>\r\n                            v.id === variant.id\r\n                              ? { ...v, name: e.target.value }\r\n                              : v\r\n                          )\r\n                        )\r\n                      }\r\n                      placeholder=\"Variant Name\"\r\n                      // className=\"border border-gray-300 rounded-md px-2 py-1 focus:ring focus:ring-indigo-200 focus:outline-none\"\r\n                    />\r\n                  </td>\r\n                  <td className=\"px-4 py-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={variant.price}\r\n                      onChange={(e) =>\r\n                        setVariants(\r\n                          variants.map((v) =>\r\n                            v.id === variant.id\r\n                              ? { ...v, price: e.target.value }\r\n                              : v\r\n                          )\r\n                        )\r\n                      }\r\n                      placeholder=\"$0.00\"\r\n                      className=\"border w-full border-gray-300 rounded-md px-2 py-1 focus:ring focus:ring-indigo-200 focus:outline-none\"\r\n                    />\r\n                  </td>\r\n                  <td className=\"px-4 py-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={variant.available}\r\n                      onChange={(e) =>\r\n                        setVariants(\r\n                          variants.map((v) =>\r\n                            v.id === variant.id\r\n                              ? { ...v, available: e.target.value }\r\n                              : v\r\n                          )\r\n                        )\r\n                      }\r\n                      placeholder=\"Available\"\r\n                      className=\"border w-full border-gray-300 rounded-md px-2 py-1 focus:ring focus:ring-indigo-200 focus:outline-none\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VariantTable;\r\n"],"names":["props","_jsxs","role","className","viewBox","fill","xmlns","children","_jsx","d","CreateProduct","_category$categories","_category$categories$","navigate","useNavigate","selectedStore","useSelector","state","_state$globalState","globalState","console","log","sectionName","open","setOpen","useState","isActive","setIsActive","loader","setLoader","currencies","setCurrencies","useEffect","length","category","setCategory","formValues","setFormValues","product_name","product_description","store_code","product_short_description","tags","product_images","category_id","product_type_id","selling_price","cost_price","stock_quantity","stock_unit","vendor","collection_id","product_status","UserApis","getStoreSettings","then","response","data","_response$data","settings","catch","error","toast","finally","handlePriceChange","e","priceType","currency","value","target","prev","_objectSpread","getCategory","handleInputChange","name","media","setMedia","Array","map","_","idx","id","file","Modal","classNames","modal","onClose","closeOnEsc","closeOnOverlayClick","showCloseIcon","center","Link","to","DashboardLayout","onSubmit","async","preventDefault","formData","FormData","append","JSON","stringify","forEach","_ref","index","concat","createProduct","_response$data2","_response$data3","success","message","type","onChange","placeholder","required","rows","MdInfo","_ref2","accept","files","handleFileChange","item","src","URL","createObjectURL","alt","disabled","categories","cat","category_name","IoAddCircleOutline","VariantTable","checked","LoadingSpinner","FaArrowRight","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","variants","setVariants","price","available","onClick","addVariant","variant","fillRule","clipRule","v"],"sourceRoot":""}