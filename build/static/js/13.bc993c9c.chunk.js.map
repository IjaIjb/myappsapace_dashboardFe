{"version":3,"file":"static/js/13.bc993c9c.chunk.js","mappings":"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","sources":["pages/dashboard/category/Category.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport DashboardLayout from \"../../../components/DashboardLayout\";\r\nimport { IoAddCircleOutline } from \"react-icons/io5\";\r\nimport { UserApis } from \"../../../apis/userApi/userApi\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../store/store\";\r\n\r\nconst Category = () => {\r\n  const selectedStore = useSelector((state: RootState) => state.globalState?.selectedStore || null);\r\n  console.log(\"Selected Store Code:\", selectedStore);\r\n      \r\n  const [categories, setCategories] = React.useState<any>([]);\r\n  const [stores, setStores] = useState<any>([]);\r\n\r\n  // const [formValues, setFormValues] = useState({\r\n  //   category_name: \"\",\r\n  //   store_code: \"\", // Use store_code instead of store_name\r\n  //   category_description: \"\",\r\n  //   status: \"active\",\r\n  // });\r\n  useEffect(() => {\r\n    UserApis.getStore()\r\n      .then((response) => {\r\n        if (response?.data) {\r\n          setStores(response?.data || []); // Adjusting to your API response structure\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error fetching stores:\", error));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    UserApis.getCategory(selectedStore)\r\n      .then((response) => {\r\n        if (response?.data) {\r\n          // console?.log(response?.data);\r\n          setCategories(response?.data);\r\n        } else {\r\n          // dispatch(login([]))\r\n        }\r\n      })\r\n      .catch(function (error) {});\r\n  }, [selectedStore]);\r\n\r\n  // const handleInputChange = (\r\n  //   e: React.ChangeEvent<\r\n  //     HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\r\n  //   >\r\n  // ) => {\r\n  //   const { name, value } = e.target;\r\n  //   setFormValues((prev) => ({ ...prev, [name]: value }));\r\n  // };\r\n\r\n  console.log(stores);\r\n  console.log(categories);\r\n  return (\r\n    <DashboardLayout>\r\n      <div>\r\n        <div className=\"flex gap-3 items-center mb-7\">\r\n          <Link\r\n            to={\"/dashboard/create-category\"}\r\n            className=\"rounded-full h-fit flex items-center gap-3 px-4 py-2\"\r\n            style={{\r\n              background: \"linear-gradient(to bottom, #382B67, #7056CD)\",\r\n            }}\r\n          >\r\n            <IoAddCircleOutline className=\"text-white\" />\r\n            <h5 className=\"text-[#FFFFFF] text-[16px] font-[400] whitespace-nowrap\">\r\n              Create Category\r\n            </h5>\r\n            {/* <LiaUploadSolid className=\"text-white\" /> */}\r\n          </Link>\r\n\r\n      \r\n        </div>\r\n        {/* <RecentOrders /> */}\r\n\r\n        <div className=\"shadow-lg sm:rounded-lg w-full mt-6\">\r\n          <table className=\" text-sm w-full text-gray-500 \">\r\n            {/* <div className='w-full '> */}\r\n            <thead className=\"text-xs text-gray-700 w-full px-5 bg-gray-50 \">\r\n              <tr className=\"w-full\">\r\n                <th scope=\"\" className=\" py-3\">\r\n                  S/N\r\n                </th>\r\n                <th scope=\"\" className=\" py-3\">\r\n                  Category Name\r\n                </th>\r\n                <th scope=\"\" className=\" py-3\">\r\n                  Category Description\r\n                </th>\r\n\r\n                <th scope=\"\" className=\" py-3\">\r\n                  Date Created\r\n                </th>\r\n                <th scope=\"\" className=\" py-3\">\r\n                  Status\r\n                </th>\r\n                <th scope=\"\" className=\" py-3\">\r\n                  Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"\">\r\n              {categories?.categories?.map((datas: any, index: any) => (\r\n                <tr className=\"bg-white  \">\r\n                  <td className=\"text-center py-4\">{index + 1}</td>\r\n\r\n                  <td className=\"text-center py-4\">{datas?.category_name}</td>\r\n                  <td className=\"text-center py-4\">\r\n                    {datas?.category_description}\r\n                  </td>\r\n                  <td className=\"text-center py-4\">{datas?.created_at}</td>\r\n\r\n                  <td\r\n                    className={`text-center py-4 \r\n            ${\r\n              datas?.status === \"deleted\"\r\n                ? \"text-red-500\"\r\n                : datas?.status === \"active\"\r\n                ? \"text-green-500\"\r\n                : \"text-yellow-300\"\r\n            } font-bold`}\r\n                  >\r\n                    {datas?.status}\r\n                  </td>\r\n                  <td className=\"text-center py-4 text-blue-500 underline\">\r\n                    <NavLink to={`/edit-category/${datas?.id}`}>Edit</NavLink>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n            {/* </div> */}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"names":["Category","_categories$categorie","selectedStore","useSelector","state","_state$globalState","globalState","console","log","categories","setCategories","React","stores","setStores","useState","useEffect","UserApis","getStore","then","response","data","catch","error","getCategory","_jsx","DashboardLayout","children","_jsxs","className","Link","to","style","background","IoAddCircleOutline","scope","map","datas","index","category_name","category_description","created_at","concat","status","NavLink","id"],"sourceRoot":""}