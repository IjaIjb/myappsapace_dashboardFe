{"version":3,"file":"static/js/598.c11edfb1.chunk.js","mappings":"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","sources":["configs.ts","apis/shared/axios.ts","apis/userApi/userApi.ts","apis/live/userLive/userLiveApis.ts","pages/auth/VerifyEmail.tsx"],"sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\n//API CALL TYPE\r\n//const TYPE_LOCAL = \"LOCAL\";\r\nconst TYPE_REST = \"REST\";\r\n//console.log(77, process.env.NODE_ENV);\r\n\r\n//resources\r\n// const API_URL =\r\n//   process.env.NODE_ENV === \"production\" ? \"\" : \"https://dev.senshost.net/api\";\r\n//const API_URL = \"http://senshost.com:8015/api\";\r\nconst SOCKET_URL = \"mqtt://senshost.com\";\r\n//API contexts\r\n//We will pass this to swagger class constractor if we need different base urls\r\n//const DEFAULT = \"\";\r\n//const SECONDARY = \"/something\";\r\n\r\nexport enum APILIST {\r\n  LOGIN = \"auth/login\",\r\n  REGISTER = \"auth/register\",\r\n  HOSTELS = \"hostels\",\r\n  GET_HOSTEL = \"get-hostel\",\r\n  GET_ALL_HOSTEL = \"get-all-hostel\",\r\n  GET_ALL_USERS = \"get-all-users\"\r\n}\r\n\r\n//CONFIG DATA (Please change here only)\r\nconst configs = {\r\n  delay: 500,\r\n  dashbordRefreshRate: 1,\r\n  port: 8015,\r\n  appName: \"senhost\",\r\n  toastDelay: 5000,\r\n  tokenStorage: \"TOKEN_PERSIST\",\r\n  socket: SOCKET_URL,\r\n  type: TYPE_REST,\r\n\r\n\r\n//   imageUrl: \"http://127.0.0.1:8000/products/\",\r\n//   context: \"http://127.0.0.1:8000/api\",\r\n//   baseRedirectFront:'http://localhost:3000/',\r\n//   baseRedirect:'http://127.0.0.1:8000',\r\n\r\n\r\n  contextCustomer: \"https://api.myappspace.net/v1/customer\",\r\n  contextUser: \"https://api.myappspace.net/v1/user\",\r\n  contextAdmin: \"https://api.myappspace.net/v1/admin\",\r\n\r\n  history: createBrowserHistory(),\r\n  requestTimeOut: 30000,\r\n  apiList: APILIST,\r\n  tablePageSize: 10,\r\n};\r\nexport default configs;\r\n","import Axios, { AxiosInstance, AxiosError, AxiosResponse } from \"axios\";\r\nimport configs from '../../configs';\r\nimport { History } from 'history';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { AppRoutes } from '../../enums/routes';\r\n\r\nimport { store } from \"../../store/store\";\r\n// import { type } from \"os\";\r\n// import { toggleNotification, signoutUser } from '../../actions';\r\n// import { AuthState } from \"../../interfaces/states\";\r\n\r\n\r\nexport class AxiosGlobal {\r\n    private _requestType: string\r\n    public axios: AxiosInstance;\r\n    private history: History;\r\n\r\n    toJSON(strOrObject: string | object): object {\r\n        if (typeof strOrObject === \"object\") {\r\n            return strOrObject;\r\n        } else if (typeof strOrObject === \"string\") {\r\n            return this.toJSON(JSON.parse(strOrObject));\r\n        } else {\r\n            return strOrObject;\r\n        }\r\n    }\r\n\r\n    get requestType() {\r\n        return this._requestType;\r\n    }\r\n\r\n    set requestType(type: string) {\r\n        this._requestType = type;\r\n        this.axios.defaults.headers.common[\"Content-Type\"] = type;\r\n    }\r\n\r\n    constructor() {\r\n        this._requestType = '';\r\n         const tokenObj =  store.getState().data.login.value.token;\r\n        this.history = configs.history;\r\n        let headers:any = {\r\n            'Content-Type': 'application/json',\r\n            callerType: 'web'\r\n        };\r\n\r\n        if (tokenObj) {\r\n            headers['Authorization'] = `Bearer ${tokenObj}`;\r\n        }\r\n\r\n        this.axios = Axios.create({\r\n            baseURL: `${configs.contextUser}`,\r\n            timeout: configs.requestTimeOut,\r\n            headers: headers\r\n        });\r\n        // Add a request interceptor\r\n        this.axios.interceptors.request.use((config) => {\r\n            return config;\r\n        }, (error: AxiosError) => {\r\n            if (error.request && error.request.data) {\r\n                return Promise.reject(error.request);\r\n            } else {\r\n                return Promise.reject(error);\r\n\r\n            }\r\n        });\r\n\r\n        // Add a response interceptor\r\n        this.axios.interceptors.response.use((response: AxiosResponse) => {\r\n            return response;\r\n        }, (error: AxiosError) => {\r\n            if (error && error.response && error.response.status && (error.response.status === 401)) {\r\n                return 'please login to proceed';\r\n                // if (error?.response?.data?.message || error?.response?.data?.ErrorMessage) {\r\n                //     if (error.response.data.name && error.response.data.name === 'TokenExipredError') {\r\n                //         store.dispatch(signoutUser());\r\n                //     }\r\n                //     notification.message = error.response.data.message || error.response.data?.ErrorMessage;\r\n                // }\r\n                // store.dispatch(toggleNotification(notification));\r\n                // store.dispatch(signoutUser());\r\n\r\n                // navigate(AppRoutes.Account, true);\r\n                // return Promise.reject({ ...error });\r\n            } else if (error && error.response && error.response.status === 403) {\r\n                return 'Unauthorized';\r\n                // if (error?.response?.data?.message || error?.response?.data?.ErrorMessage) {\r\n                //     notification.message = error.response.data.message || error.response.data.ErrorMessage;\r\n                // }\r\n                // store.dispatch(toggleNotification(notification));\r\n                // return Promise.reject({ ...error });\r\n            } else if (error && error.response && error.response.status === 400) {\r\n                return 'One of the field validation failed';\r\n\r\n                // if (error && Array.isArray(error?.response?.data)) {\r\n                //     const arrayOfErrors = error.response.data.map((item: { ErrorMessage: string }) => item?.ErrorMessage);\r\n                //     notification.message = arrayOfErrors.join(\", \");\r\n                // } else if (error?.response?.data?.ErrorMessage) {\r\n                //     notification.message = error.response.data?.ErrorMessage;\r\n                // } else if (error?.response?.data) {\r\n                //     notification.message = error.response.data;\r\n                // }\r\n\r\n                // store.dispatch(toggleNotification(notification));\r\n\r\n                // return Promise.reject(error);\r\n            } else if (error?.response?.status === 404) {\r\n                 return 'record not found';\r\n\r\n                // if (error && Array.isArray(error.response.data)) {\r\n                //     const arrayOfErrors = error.response.data.map((item: { ErrorMessage: string }) => item.ErrorMessage);\r\n                //     notification.message = arrayOfErrors.join(\", \");\r\n                // } else if (error && error.response && error.response.data && error.response.data?.ErrorMessage) {\r\n                //     notification.message = error.response.data.ErrorMessage;\r\n                // }\r\n\r\n                // store.dispatch(toggleNotification(notification));\r\n\r\n                // return Promise.reject(error);\r\n            } else if (error && error.response && error.response.status === 500) {\r\n                return 'internal server error';\r\n                // store.dispatch(toggleNotification(notification));\r\n\r\n                // return Promise.reject(error);\r\n            } else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    }\r\n}","import { AxiosPromise } from \"axios\";\r\nimport configs from \"../../configs\";\r\n\r\nimport { UserLiveApis } from \"../live/userLive/userLiveApis\";\r\n\r\n\r\n\r\nexport class UserApis {\r\n    private static authLiveApis: UserLiveApis = new UserLiveApis();\r\n    \r\n    static login(data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.loginUser(data);\r\n        }\r\n    }  \r\n\r\n    static register(data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.registerUser(data);\r\n        }\r\n    }  \r\n\r\n    static verifyMail(pageNo:any): AxiosPromise<Array<any>> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.verifyMail(pageNo);\r\n        }\r\n    } \r\n\r\n    static resendVerificationCode(pageNo:any): AxiosPromise<Array<any>> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.resendVerificationCode(pageNo);\r\n        }\r\n    } \r\n\r\n    // static forgotPassword(data: any): AxiosPromise<any> {\r\n    //     if (configs.type === \"LOCAL\") {\r\n    //         return {} as AxiosPromise;\r\n    //     } else {\r\n    //         return this.authLiveApis.forgotPassword(data);\r\n    //     }\r\n    // }\r\n\r\n    // static resetPassword(data: any): AxiosPromise<any> {\r\n    //     if (configs.type === \"LOCAL\") {\r\n    //         return {} as AxiosPromise;\r\n    //     } else {\r\n    //         return this.authLiveApis.resetPassword(data);\r\n    //     }\r\n    // }\r\n\r\n    static createStore(data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.createStore(data);\r\n        }\r\n    }\r\n\r\n    static getStore(): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getStore();\r\n        }\r\n    } \r\n\r\n    static getSingleStore(identifier:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getSingleStore(identifier);\r\n        }\r\n    } \r\n\r\n    static updateStore(store_id:any, data:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.updateStore(store_id, data);\r\n        }\r\n    } \r\n\r\n    static deleteStore(id:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.deleteStore(id);\r\n        }\r\n    } \r\n\r\n    static createCategory(storeCode:any, data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.createCategory(storeCode,data);\r\n        }\r\n    }\r\n\r\n    static getCategory(storeCode:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getCategory(storeCode);\r\n        }\r\n    } \r\n\r\n    static getSingleCategory(store_code:any, category_id:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getSingleCategory(store_code, category_id);\r\n        }\r\n    } \r\n\r\n    static createProduct(storeCode:any, data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.createProduct(storeCode,data);\r\n        }\r\n    }\r\n\r\n    static getProduct(storeCode:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getProduct(storeCode);\r\n        }\r\n    } \r\n\r\n    static getSingleProduct(store_code:any, category_id:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getSingleProduct(store_code, category_id);\r\n        }\r\n    } \r\n\r\n    static updateProduct(store_code:any, product_id:any, data:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.updateProduct(store_code, product_id, data);\r\n        }\r\n    } \r\n\r\n    static createCustomer(storeCode:any, data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.createCustomer(storeCode,data);\r\n        }\r\n    }\r\n\r\n    static getAllCustomer(storeCode:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getAllCustomer(storeCode);\r\n        }\r\n    } \r\n\r\n    static getSingleCustomer(store_code:any, customer_id:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.getSingleCustomer(store_code, customer_id);\r\n        }\r\n    } \r\n\r\n    static updateCustomer(store_code:any, customer_id:any, data:any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.updateCustomer(store_code, customer_id, data);\r\n        }\r\n    } \r\n\r\n    static logout(data: any): AxiosPromise<any> {\r\n        if (configs.type === \"LOCAL\") {\r\n            return {} as AxiosPromise;\r\n        } else {\r\n            return this.authLiveApis.logout(data);\r\n        }\r\n    }\r\n\r\n\r\n}","import { AxiosGlobal } from \"../../shared/axios\";\r\nimport{ AxiosPromise} from \"axios\";\r\nimport configs from \"../../../configs\";\r\nimport { store } from \"../../../store/store\";\r\n\r\n\r\n\r\nexport class UserLiveApis extends AxiosGlobal{\r\n    \r\n    loginUser(data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/${configs.apiList.LOGIN}`, data,\r\n            {\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n              }\r\n        );\r\n    }\r\n\r\n\r\n    registerUser(data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/${configs.apiList.REGISTER}`, data);\r\n    } \r\n\r\n    verifyMail(data: any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/auth/verify-account`, data);\r\n    }\r\n\r\n    resendVerificationCode(data: any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/auth/resend-code`, data);\r\n    }\r\n\r\n    // forgotPassword(data:any): AxiosPromise<any> {\r\n    //     return this.axios.post(`${configs.contextUser}/forgot`, data);\r\n    // }\r\n\r\n    // resetPassword(data:any): AxiosPromise<any> {\r\n    //     return this.axios.post(`${configs.contextUser}/reset`, data);\r\n    // }\r\n\r\n    createStore(data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/store/create`, data,{\r\n            headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n          });\r\n    }\r\n\r\n    getStore(): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/store/allStores`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    getSingleStore(identifier:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/store/${identifier}/getOne`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    updateStore(store_id:any, data:any): AxiosPromise<Array<any>> {\r\n        return this.axios.put(`${configs.contextUser}/store/${store_id}/update`,  data,{\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    deleteStore(id: any): AxiosPromise<Array<any>> {\r\n        return this.axios.delete(`${configs.contextUser}/store/${id}/remove`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n    \r\n    createCategory(storeCode:any, data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/${storeCode}/categories/createOne`, data,{\r\n            headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n          });\r\n    }\r\n\r\n    getCategory(storeCode:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${storeCode}/categories/fetchAll`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    getSingleCategory(store_code:any, category_id:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${store_code}/categories/${category_id}/getOne`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    createProduct(storeCode:any, data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/${storeCode}/products`, data,{\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n          });\r\n    }\r\n \r\n    getProduct(storeCode:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${storeCode}/products`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    getSingleProduct(store_code:any, product_id:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${store_code}/products/${product_id}`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    \r\n    updateProduct(store_code:any, product_id:any, data:any): AxiosPromise<Array<any>> {\r\n        return this.axios.put(`${configs.contextUser}/${store_code}/products/${product_id}`,  data,{\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n\r\n    createCustomer(storeCode:any, data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/${storeCode}/customers/create`, data,{\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n          });\r\n    }\r\n\r\n    getAllCustomer(storeCode:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${storeCode}/customers/getAll`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    getSingleCustomer(store_code:any, customer_id:any): AxiosPromise<Array<any>> {\r\n        return this.axios.get(`${configs.contextUser}/${store_code}/customers/getOne/${customer_id}`, {\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    updateCustomer(store_code:any, customer_id:any, data:any): AxiosPromise<Array<any>> {\r\n        return this.axios.put(`${configs.contextUser}/${store_code}/customers/update/${customer_id}`,  data,{\r\n            headers: { \"Content-Type\": \"aplication/json\", \"Accept\": \"aplication/json\", \"Authorization\": `Bearer ${store.getState().data.login.value.token}`, \"Access-Control-Allow-Origin\": \"*\" },\r\n        });\r\n    }\r\n\r\n    logout(data:any): AxiosPromise<any> {\r\n        return this.axios.post(`${configs.contextUser}/logout`, data,{\r\n            headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n          });\r\n    }\r\n    \r\n    // getAllHouses(cursor:any): AxiosPromise<Array<any>> {\r\n    //     return this.axios.get(`${configs.context}/${configs.apiList.HOSTELS}/${configs.apiList.GET_ALL_HOSTEL}?cursor=${cursor}`,{\r\n    //         headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n    //       });\r\n    // }\r\n\r\n\r\n    // getAllUsers(cursor:any): AxiosPromise<Array<any>> {\r\n    //     return this.axios.get(`${configs.context}/${configs.apiList.GET_ALL_USERS}?cursor=${cursor}`,{\r\n    //         headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":`Bearer ${store.getState().data.login.value.token}`,\"Access-Control-Allow-Origin\":\"*\" },\r\n    //       });\r\n    // }\r\n\r\n\r\n\r\n    //  loginUser(data:any): AxiosPromise<any> {\r\n    //      return this.axios.post(`${configs.context}/login`, data,{\r\n    //         headers: { \"Content-Type\": \"aplication/json\",\"Accept\":\"aplication/json\",\"Authorization\":'Bearer 2|X4dvppS3EugstZmfvKwPbf4jBF7Y70OYvKGjdFnQ',\"Access-Control-Allow-Origin\":\"*\" },\r\n    //       });\r\n    // }\r\n\r\n\r\n}","import React, { useRef, useState } from 'react'\r\nimport { FaArrowRight } from 'react-icons/fa';\r\nimport { UserApis } from '../../apis/userApi/userApi';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst VerifyEmail = () => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [code, setCode] = useState(Array(6).fill(\"\"));\r\n  const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\r\n\r\n\r\n  const email  = \"ijabolu@gmail.com\"; // Assumes email is stored in Redux state\r\n  // const { email } = useSelector((state: any) => state.login); // Assumes email is stored in Redux state\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>, index: number) => {\r\n    const value = e.target.value;\r\n    if (/^\\d$/.test(value)) {\r\n      const newCode = [...code];\r\n      newCode[index] = value;\r\n      setCode(newCode);\r\n\r\n      // Move focus to the next input if exists\r\n      if (index < 5 && inputRefs.current[index + 1]) {\r\n        inputRefs.current[index + 1]?.focus();\r\n      }\r\n    } else if (value === \"\") {\r\n      // Allow backspace to delete and focus previous input\r\n      const newCode = [...code];\r\n      newCode[index] = \"\";\r\n      setCode(newCode);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\r\n    if (e.key === \"Backspace\" && code[index] === \"\") {\r\n      // Move focus to the previous input\r\n      if (index > 0) {\r\n        inputRefs.current[index - 1]?.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n  \r\n    // Combine the 6 inputs into a single verification code\r\n    const verificationCode = code.join(\"\"); // Assuming `code` is the state managing the 6 inputs\r\n  \r\n    if (verificationCode.length !== 6) {\r\n      toast.error(\"Please enter a complete 6-digit code.\");\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response: any = await UserApis.verifyMail({ email, code: verificationCode });\r\n  \r\n      if (response?.data?.user === true) {\r\n        toast.success(response?.message || \"Email verified successfully!\");\r\n        navigate(\"/auth/choose-profession\"); // Navigate to the next page\r\n      } else {\r\n        toast.error(response?.message || \"Invalid verification code. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error verifying email:\", error);\r\n      toast.error(\"An error occurred. Please try again.\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n  \r\n\r\n  const resendCode = async () => {\r\n    try {\r\n      const response:any = await UserApis.resendVerificationCode({ email });\r\n\r\n      if (response) {\r\n        console.log(\":Verified\", response.data);\r\n\r\n        toast.success(response?.message || \"Verification code resent successfully!\");\r\n        navigate(\"/auth/add-store\");\r\n    \r\n      } else {\r\n        toast.error(response?.message || \"Failed to resend the verification code.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error resending code:\", error);\r\n      toast.error(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n    \r\n  return (\r\n    <div>\r\n        <div className='flex justify-center'>\r\n<form onSubmit={handleSubmit} className='mt-10'>\r\n    <div className='flex justify-center'>\r\n<img src=\"/images/logo2.svg\" className=\"text-center\" alt=\"myappspace Logo\" />\r\n</div>\r\n<div className='mt-[60px]'>\r\n<h4 className='text-[#000000] text-[24px] font-[700] text-center'>Verify email</h4>\r\n<h4 className='text-[#969696] text-[16px] font-[500] text-center'>Please check your  mail for a code and input the code here to proceed</h4>\r\n</div>\r\n\r\n<div className='mx-10 my-10'>\r\n    <hr />\r\n</div>\r\n\r\n<div className=\"flex flex-col items-center p-4 \">\r\n      <h2 className=\"text-black font-bold text-lg mb-4\">Verification Code</h2>\r\n      <div className=\"flex gap-2 mb-4\">\r\n\r\n      {/* <input\r\n              type=\"text\"\r\n              id=\"verificationCode\"\r\n              value={verificationCode}\r\n              onChange={(e) => setVerificationCode(e.target.value)}\r\n              className=\"w-12 h-12 text-center text-lg border border-gray-300 rounded-md bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              required\r\n            /> */}\r\n        {code.map((digit, index) => (\r\n          <input\r\n            key={index}\r\n            id={`code-input-${index}`}\r\n            type=\"text\"\r\n            maxLength={1}\r\n            value={digit}\r\n            onChange={(e) => handleChange(e, index)}\r\n            onKeyDown={(e) => handleKeyDown(e, index)}\r\n            className=\"w-12 h-12 text-center text-lg border border-gray-300 rounded-md bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            ref={(el) => (inputRefs.current[index] = el)}\r\n             />\r\n        ))}\r\n      </div>\r\n      <button\r\n         onClick={resendCode}\r\n          className=\"text-blue-600 font-medium hover:underline\"\r\n        >\r\n          Resend verification code\r\n        </button>\r\n      {/* {timer > 0 ? (\r\n        <p className=\"text-red-600 text-sm\">\r\n          Resend verification code ({timer}s)\r\n        </p>\r\n      ) : (\r\n        <button\r\n          onClick={() => setTimer(30)}\r\n          className=\"text-blue-600 font-medium hover:underline\"\r\n        >\r\n          Resend verification code\r\n        </button>\r\n      )} */}\r\n    </div>\r\n\r\n    <div className=\"flex justify-center mt-10\">\r\n    <button\r\n            type=\"submit\"\r\n            // onClick={handleSubmit}\r\n            disabled={isSubmitting}\r\n                        className={`disabled:bg-gray-500  flex gap-2 items-center py-2 w-fit px-6 bg-secondary text-white rounded-full  hover:bg-secondary/[70%]\r\n}`}\r\n                      >\r\n               Proceed\r\n                      <FaArrowRight />\r\n                      </button>\r\n                    </div>\r\n</form>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerifyEmail"],"names":["APILIST","delay","dashbordRefreshRate","port","appName","toastDelay","tokenStorage","socket","type","contextCustomer","contextUser","contextAdmin","history","createBrowserHistory","requestTimeOut","apiList","tablePageSize","AxiosGlobal","toJSON","strOrObject","this","JSON","parse","requestType","_requestType","axios","defaults","headers","common","constructor","tokenObj","store","getState","data","login","value","token","configs","callerType","concat","Axios","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","_error$response","status","UserApis","authLiveApis","loginUser","register","registerUser","verifyMail","pageNo","resendVerificationCode","createStore","getStore","getSingleStore","identifier","updateStore","store_id","deleteStore","id","createCategory","storeCode","getCategory","getSingleCategory","store_code","category_id","createProduct","getProduct","getSingleProduct","updateProduct","product_id","createCustomer","getAllCustomer","getSingleCustomer","customer_id","updateCustomer","logout","post","LOGIN","REGISTER","get","put","delete","VerifyEmail","isSubmitting","setIsSubmitting","useState","code","setCode","Array","fill","inputRefs","useRef","email","navigate","useNavigate","_jsx","children","className","_jsxs","onSubmit","async","e","preventDefault","verificationCode","join","length","toast","_response$data","user","success","message","console","src","alt","map","digit","index","maxLength","onChange","handleChange","target","test","newCode","_inputRefs$current","current","focus","onKeyDown","handleKeyDown","_inputRefs$current2","key","ref","el","onClick","log","disabled","FaArrowRight"],"sourceRoot":""}