{"version":3,"file":"static/js/4840.c930b5be.chunk.js","mappings":"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","sources":["pages/auth/PersonalSignup.tsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport LoadingSpinner from \"../../components/UI/LoadingSpinner\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport { UserApis } from \"../../apis/userApi/userApi\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { login } from \"../../reducer/loginSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nconst images = [\r\n  \"/images/auth/authImage1.svg\",\r\n  \"/images/auth/authImage2.svg\",\r\n  \"/images/auth/authImage3.svg\",\r\n]; // Add more images as needed\r\n\r\nconst PersonalSignup = () => {\r\n   const [index, setIndex] = useState(0);\r\n  \r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        setIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n      }, 3000); // Change image every 3 seconds\r\n  \r\n      return () => clearInterval(interval);\r\n    }, []);\r\n    \r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [confirmPassword, setShowConfirmPassword] = useState(false);\r\n  const dispatch: Dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const initialData:any = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    password: \"\",\r\n    password_confirmation: \"\",\r\n  };\r\n\r\n  const validation = Yup.object({\r\n    first_name: Yup.string().required(\"First Name is required\"),\r\n    last_name: Yup.string().required(\"Last Name is required\"),\r\n    email: Yup.string()\r\n      .email(\"Invalid email address\")\r\n      .required(\"Email is required\"),\r\n    phone_number: Yup.string()\r\n    .matches(/^[0-9]{10}$/, \"Phone number must be exactly 11 digits\")\r\n      .required(\"Phone number is required\"),\r\n    password: Yup.string()\r\n    .min(8, \"Password must be at least 8 characters\")\r\n    .matches(/[A-Z]/, \"Password must contain at least one uppercase letter\")\r\n    .matches(/[a-z]/, \"Password must contain at least one lowercase letter\")\r\n    .matches(/[0-9]/, \"Password must contain at least one number\")\r\n    .matches(\r\n      /[@$!%*?&]/,\r\n      \"Password must contain at least one special character (@, $, !, %, *, ?, &)\"\r\n    )\r\n    .required(\"Password is required\"),\r\n    password_confirmation: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), undefined], \"Passwords must match\")\r\n      .required(\"Confirm Password is required\"),\r\n  });\r\n  const isValidEmail = (email: string) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n  // const onSubmit = async (values:any) => {\r\n  //   if (values?.password !== values?.password_confirmation) {\r\n  //     return toast.error(\"Password does not match\");\r\n  // }\r\n  //   try {\r\n  //     // Convert form values to FormData\r\n  //     const formData = new FormData();\r\n  //     formData.append(\"first_name\", values.first_name);\r\n  //     formData.append(\"last_name\", values.last_name);\r\n  //     formData.append(\"email\", values.email);\r\n  //     formData.append(\"phone_number\", values.phone_number);\r\n  //     formData.append(\"password\", values.password);\r\n\r\n  //     // Submit formData to the API\r\n  //     const response = await UserApis.register(formData);\r\n  //     dispatch(login({ email: values?.email, token: response.data.token, name: response.data.name }))\r\n\r\n  //     console.log(\"Registration successful:\", response);\r\n  //     toast.success(\"Login Successful\");\r\n  //     navigate(\"/auth/verify-email\");\r\n  //     window.scrollTo(0, 0); // Scroll to top\r\n  //   } catch (error) {\r\n  //     console.error(\"Error registering user:\", error);\r\n  //   }\r\n  //   // UserApis.register(\"console.log()\")\r\n  //   //   navigate(\"/auth/verify-email\");\r\n\r\n  //   //   window.scrollTo(0, 0); // Scroll to top\r\n\r\n  // };\r\n\r\n  const onSubmit = async (\r\n    values: {\r\n      first_name: string;\r\n      last_name: string;\r\n      email: string;\r\n      phone_number: string;\r\n      password: string;\r\n      password_confirmation: string;\r\n    },\r\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\r\n  ) => {\r\n    if (values.password !== values.password_confirmation) {\r\n      toast.error(\"Passwords do not match\");\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n  \r\n    const formData = new FormData();\r\n    formData.append(\"first_name\", values.first_name);\r\n    formData.append(\"last_name\", values.last_name);\r\n    formData.append(\"email\", values.email);\r\n    formData.append(\"phone_number\", values.phone_number);\r\n    formData.append(\"password\", values.password);\r\n    formData.append(\"password_confirmation\", values.password_confirmation);\r\n  \r\n    try {\r\n      const response:any = await UserApis.register(formData);\r\n      console.log(response)\r\n      if (response?.status === 200) {\r\n        dispatch(\r\n          login({\r\n            email: values.email,\r\n            // token: response.data.token,\r\n            // name: response.data.name,\r\n          })\r\n        );\r\n        console.log(\"Signup created:\", response.data);\r\n\r\n        toast.success(\"Login Successful\");\r\n        navigate(\"/auth/verify-email\");\r\n      } else {\r\n        toast.error(response?.data?.errors?.message);\r\n      }\r\n    } catch (error:any) {\r\n      console.error(error);\r\n      toast.error(error.response.data?.message || \"An error occurred. Please try again.\");\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-8\">\r\n        <div className=\"grid md:grid-cols-2 \">\r\n          {/* <div className=\"h-screen md:block hidden \">\r\n            <img\r\n              src=\"/images/auth/authImage1.svg\"\r\n              className=\"h-screen\"\r\n              alt=\"Logo\"\r\n            />\r\n          </div> */}\r\n                     <div className=\"h-screen md:block hidden relative overflow-hidden\">\r\n                <AnimatePresence>\r\n                  <motion.img\r\n                    key={images[index]} // Ensure smooth transition\r\n                    src={images[index]}\r\n                    alt=\"Auth Image\"\r\n                    className=\"h-screen absolute top-0 left-0\"\r\n                    initial={{ opacity: 0, scale: 1.1 }}\r\n                    animate={{ opacity: 1, scale: 1 }}\r\n                    exit={{ opacity: 0, scale: 1.1 }}\r\n                    transition={{ duration: 1 }}\r\n                  />\r\n                </AnimatePresence>\r\n              </div>\r\n\r\n          <div className=\"md:block flex \">\r\n            <div className=\" pt-10  px-5\">\r\n              <div className=\"\">\r\n              <a href=\"https://myappspace.net/\" rel=\"noreferrer\" target=\"_blank\">\r\n            <img\r\n              src=\"/images/auth/MyAppspace (3).png\"\r\n              className=\"w-[170px] h-full\"\r\n              alt=\"Logo\"\r\n            />\r\n            </a>\r\n                <div className=\" mt-7 \">\r\n                  <h5 className=\"text-[#000000] text-[16px] font-[600] \">\r\n                    Personal Information\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex flex-col max-w-[570px] mt-2 gap-3\">\r\n                <Formik\r\n                  initialValues={initialData}\r\n                  validationSchema={validation}\r\n                  onSubmit={onSubmit}\r\n                >\r\n                  {({ values, isSubmitting, handleChange }) => (\r\n                    <Form className=\"w-full  mb-6 flex flex-col justify-between\">\r\n                      <div className=\"\">\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"first_name\"\r\n                            >\r\n                              First Name\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"first_name\"\r\n                              type=\"text\"\r\n                              id=\"first_name\"\r\n                              onChange={handleChange}\r\n                              value={values.first_name}\r\n                              placeholder=\"First Name\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"first_name\" />\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"last_name\"\r\n                            >\r\n                              Last Name\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"last_name\"\r\n                              type=\"text\"\r\n                              id=\"last_name\"\r\n                              onChange={handleChange}\r\n                              value={values.last_name}\r\n                              placeholder=\"Last Name\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"last_name\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-5 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"email\"\r\n                            >\r\n                              Email Address\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"email\"\r\n                              type=\"email\"\r\n                              id=\"email\"\r\n                              onChange={handleChange}\r\n                              value={values.email}\r\n                              placeholder=\"\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"email\" />\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div className=\" mb-5 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"phone_number\"\r\n                            >\r\n                              Phone Number\r\n                            </label>\r\n                            <Field\r\n                              className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                              name=\"phone_number\"\r\n                              type=\"number\"\r\n                              id=\"phone_number\"\r\n                              onChange={handleChange}\r\n                              value={values.phone_number}\r\n                              placeholder=\"08166965025\"\r\n                            />\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"phone_number\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-3\">\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"password\"\r\n                            >\r\n                              Password\r\n                            </label>\r\n                            <div>\r\n                              <Field\r\n                                className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                                name=\"password\"\r\n                                onChange={handleChange}\r\n                                value={values.password}\r\n                                id=\"password\"\r\n                                type={!showPassword ? \"password\" : \"text\"}\r\n                                placeholder=\"\"\r\n                              />\r\n                              <button\r\n                                type=\"button\"\r\n                                // role=\"button\"\r\n                                aria-label=\"show password\"\r\n                                title=\" show password\"\r\n                                onClick={() =>\r\n                                  setShowPassword(() => !showPassword)\r\n                                }\r\n                                className={`absolute right-4 top-[40px]`}\r\n                              >\r\n                                {!showPassword ? (\r\n                                  <AiOutlineEyeInvisible className=\"\" />\r\n                                ) : (\r\n                                  <AiOutlineEye className=\"\" />\r\n                                )}\r\n                              </button>\r\n                            </div>\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"password\" />\r\n                            </p>\r\n                          </div>\r\n                          <div className=\" mb-3 w-full relative\">\r\n                            <label\r\n                              className=\" text-[#2B2C2B] text-[12px] font-[400] \"\r\n                              htmlFor=\"password_confirmation\"\r\n                            >\r\n                              Confirm Password\r\n                            </label>\r\n                            <div>\r\n                              <Field\r\n                                className=\"mt-1 block w-full h-[40px] border-[0.5px]  pl-3 rounded-[5px] focus:outline-none text-sm bg-[#FBFBFF]  border-[#D8D8E2] \"\r\n                                name=\"password_confirmation\"\r\n                                id=\"password_confirmation\"\r\n                                onChange={handleChange}\r\n                                value={values.password_confirmation}\r\n                                type={!confirmPassword ? \"password\" : \"text\"}\r\n                                placeholder=\"\"\r\n                              />\r\n                              <button\r\n                                type=\"button\"\r\n                                // role=\"button\"\r\n                                aria-label=\"show password\"\r\n                                title=\" show password\"\r\n                                onClick={() =>\r\n                                  setShowConfirmPassword(() => !confirmPassword)\r\n                                }\r\n                                className={`absolute right-4 top-[40px]`}\r\n                              >\r\n                                {!confirmPassword ? (\r\n                                  <AiOutlineEyeInvisible className=\"\" />\r\n                                ) : (\r\n                                  <AiOutlineEye className=\"\" />\r\n                                )}\r\n                              </button>\r\n                            </div>\r\n                            <p className=\"text-red-700 text-xs mt-1 \">\r\n                              <ErrorMessage name=\"password_confirmation\" />\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n  <p className=\"flex items-center justify-center gap-x-1 text-[#1A1A1A] text-[16px] md:text-[18px] font-normal\">\r\n                          Already have an account?\r\n                          <Link\r\n                            to=\"/\"\r\n                            className=\"text-secondary underline font-bold hover:underline\"\r\n                          >\r\n                            Login Here\r\n                          </Link>\r\n                        </p>\r\n                      <div className=\"flex justify-end items-end h-full\">\r\n                      <button\r\n  type=\"submit\"\r\n  disabled={isSubmitting || \r\n    values.first_name === \"\" ||\r\n    !isValidEmail(values.email) ||\r\n    values.last_name === \"\"  || values.email === \"\"  || values.phone_number === \"\" || (values.password !== values.password_confirmation)} // Formik automatically sets this during submission\r\n  className={`disabled:bg-gray-500 flex gap-2 items-center py-2 w-fit px-6 bg-secondary text-white rounded-full hover:bg-secondary/[70%]`}\r\n>\r\n  {isSubmitting ? <LoadingSpinner /> : \"Proceed\"}\r\n  {!isSubmitting && <FaArrowRight />}\r\n</button>\r\n\r\n                      </div>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n              <p className=\"text-center text-sm text-[#1A1A1A] mt-4\">\r\n  By signing up, you agree to our\r\n  <a href=\"https://myappspace.net/terms-and-condition\"  rel=\"noopener noreferrer\" target=\"_blank\" className=\"text-secondary underline font-bold hover:underline mx-1\">\r\n    Terms & Conditions\r\n  </a>\r\n  and\r\n  <a href=\"https://myappspace.net/privacy-policy\"  rel=\"noopener noreferrer\" target=\"_blank\"  className=\"text-secondary underline font-bold hover:underline mx-1\">\r\n    Privacy Policy\r\n  </a>.\r\n</p>\r\n\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={2000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalSignup;\r\n"],"names":["images","PersonalSignup","index","setIndex","useState","useEffect","interval","setInterval","prevIndex","length","clearInterval","showPassword","setShowPassword","confirmPassword","setShowConfirmPassword","dispatch","useDispatch","navigate","useNavigate","validation","Yup","first_name","required","last_name","email","phone_number","matches","password","min","password_confirmation","oneOf","undefined","_jsxs","children","_jsx","className","AnimatePresence","motion","img","src","alt","initial","opacity","scale","animate","exit","transition","duration","href","rel","target","Formik","initialValues","validationSchema","onSubmit","async","values","_ref","setSubmitting","toast","error","formData","FormData","append","response","UserApis","register","_response$data","_response$data$errors","console","log","status","login","data","success","errors","message","_error$response$data","_ref2","isSubmitting","handleChange","Form","htmlFor","Field","name","type","id","onChange","value","placeholder","ErrorMessage","title","onClick","AiOutlineEye","AiOutlineEyeInvisible","Link","to","disabled","test","LoadingSpinner","FaArrowRight","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}