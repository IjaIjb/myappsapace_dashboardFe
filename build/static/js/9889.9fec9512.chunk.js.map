{"version":3,"file":"static/js/9889.9fec9512.chunk.js","mappings":"oPAWA,MAoMA,EApMoBA,KAClB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,IAC1CC,EAAMC,IAAWF,EAAAA,EAAAA,UAASG,MAAM,GAAGC,KAAK,KACzCC,GAAYC,EAAAA,EAAAA,QAAoC,IAChDC,GAAqBC,EAAAA,EAAAA,OAIrB,MAAEC,IAAUC,EAAAA,EAAAA,KAAaC,IAAU,IAAAC,EAAA,OAAU,OAALD,QAAK,IAALA,GAAW,QAANC,EAALD,EAAOE,YAAI,IAAAD,OAAN,EAALA,EAAaE,MAAMC,KAAK,IAChEC,GAAWC,EAAAA,EAAAA,MA0FjB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBF,SAAA,EAC5CC,EAAAA,EAAAA,MAAA,QAAME,SA9DiBC,UACnBC,EAAEC,iBACF1B,GAAgB,GAGhB,MAAM2B,EAAmBzB,EAAK0B,KAAK,IAEnC,GAAgC,IAA5BD,EAAiBE,OAGnB,OAFAC,EAAAA,GAAMC,MAAM,8CACZ/B,GAAgB,GAIlB,IACE,MAAMgC,QAAsBC,EAAAA,EAASC,WAAW,CAAExB,QAAOR,KAAMyB,IAEnD,OAARK,QAAQ,IAARA,GAAAA,EAAUlB,MACRN,GACQO,EAAAA,EAAAA,IAAM,CACJA,MAAOiB,EAASlB,KAAKA,KAAKqB,KAAKzB,MAC/B0B,MAAOJ,EAASlB,KAAKA,KAAKsB,MAAMC,aAChCC,GAAIN,EAASlB,KAAKA,KAAKwB,GACvBxB,KAAc,OAARkB,QAAQ,IAARA,OAAQ,EAARA,EAAUlB,KAAKA,KAAKqB,QAGxCL,EAAAA,GAAMS,SAAgB,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,UAAW,gCACnCvB,EAAS,oBAGTa,EAAAA,GAAMC,OAAc,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,UAAW,+CAErC,CAAE,MAAOT,GACPU,QAAQV,MAAM,yBAA0BA,GACxCD,EAAAA,GAAMC,MAAM,uCACd,CAAC,QACC/B,GAAgB,EAClB,GA0B0BsB,UAAU,QAAOF,SAAA,EAC3CD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sBAAqBF,UACpCD,EAAAA,EAAAA,KAAA,KAAGuB,KAAK,0BAA0BC,IAAI,aAAaC,OAAO,SAAQxB,UAC1DD,EAAAA,EAAAA,KAAA,OACE0B,IAAI,kCACJvB,UAAU,+BACVwB,IAAI,cAIlBzB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,oDAAmDF,SAAC,kBAClED,EAAAA,EAAAA,KAAA,MAAIG,UAAU,oDAAmDF,SAAC,8EAGlED,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaF,UACxBD,EAAAA,EAAAA,KAAA,YAGJE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCF,SAAA,EAC1CD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,oCAAmCF,SAAC,uBAClDD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBF,SAU7BlB,EAAK6C,KAAI,CAACC,EAAOC,KAChB9B,EAAAA,EAAAA,KAAA,SAEEmB,GAAE,cAAAY,OAAgBD,GAClBE,KAAK,OACLC,UAAW,EACXpC,MAAOgC,EACPK,SAAW5B,GAhIA6B,EAAC7B,EAAwCwB,KAC5D,MAAMjC,EAAQS,EAAEmB,OAAO5B,MACvB,GAAI,OAAOuC,KAAKvC,GAAQ,CACtB,MAAMwC,EAAU,IAAItD,GAK4B,IAADuD,EAJ/CD,EAAQP,GAASjC,EACjBb,EAAQqD,GAGJP,EAAQ,GAAK3C,EAAUoD,QAAQT,EAAQ,KACb,QAA5BQ,EAAAnD,EAAUoD,QAAQT,EAAQ,UAAE,IAAAQ,GAA5BA,EAA8BE,QAElC,MAAO,GAAc,KAAV3C,EAAc,CAEvB,MAAMwC,EAAU,IAAItD,GACpBsD,EAAQP,GAAS,GACjB9C,EAAQqD,EACV,GAgHyBF,CAAa7B,EAAGwB,GACjCW,UAAYnC,GA9GAoC,EAACpC,EAA0CwB,KAG7C,IAADa,EAFH,cAAVrC,EAAEsC,KAAuC,KAAhB7D,EAAK+C,IAE5BA,EAAQ,IACkB,QAA5Ba,EAAAxD,EAAUoD,QAAQT,EAAQ,UAAE,IAAAa,GAA5BA,EAA8BH,QAElC,EAwG0BE,CAAcpC,EAAGwB,GACnC3B,UAAU,iIACV0C,IAAMC,GAAQ3D,EAAUoD,QAAQT,GAASgB,GARpChB,QAYX9B,EAAAA,EAAAA,KAAA,UACG+C,QApEY1C,UACjB,IACE,MAAMQ,QAAqBC,EAAAA,EAASkC,uBAAuB,CAAEzD,UAE9C,IAAD0D,EAAd,GAAIpC,EAGFF,EAAAA,GAAMS,SAAgB,OAARP,QAAQ,IAARA,GAAc,QAANoC,EAARpC,EAAUlB,YAAI,IAAAsD,OAAN,EAARA,EAAgB5B,UAAW,+CAIzCV,EAAAA,GAAMC,OAAc,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,UAAW,0CAErC,CAAE,MAAOT,GACPU,QAAQV,MAAM,wBAAyBA,GACvCD,EAAAA,GAAMC,MAAM,uCACd,GAqDMT,UAAU,4CAA2CF,SACtD,iCAiBLD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4BAA2BF,UAC1CC,EAAAA,EAAAA,MAAA,UACQ8B,KAAK,SAELkB,SAAUtE,EACEuB,UAAS,kIAC9BF,SAAA,CACoB,WAEDD,EAAAA,EAAAA,KAACmD,EAAAA,IAAY,aAIlCnD,EAAAA,EAAAA,KAACoD,EAAAA,GAAc,CACRC,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,QAGV,C","sources":["pages/auth/VerifyEmail.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { FaArrowRight } from 'react-icons/fa';\r\nimport { UserApis } from '../../apis/userApi/userApi';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { login } from '../../reducer/loginSlice';\r\n\r\nconst VerifyEmail = () => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [code, setCode] = useState(Array(6).fill(\"\"));\r\n  const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\r\n  const dispatch: Dispatch = useDispatch();\r\n\r\n\r\n  // const email  = \"ijabolu@gmail.com\"; // Assumes email is stored in Redux state\r\n  const { email } = useSelector((state: any) => state?.data?.login.value); // Assumes email is stored in Redux state\r\n  const navigate = useNavigate();\r\n\r\n// console.log(email)\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>, index: number) => {\r\n    const value = e.target.value;\r\n    if (/^\\d$/.test(value)) {\r\n      const newCode = [...code];\r\n      newCode[index] = value;\r\n      setCode(newCode);\r\n\r\n      // Move focus to the next input if exists\r\n      if (index < 5 && inputRefs.current[index + 1]) {\r\n        inputRefs.current[index + 1]?.focus();\r\n      }\r\n    } else if (value === \"\") {\r\n      // Allow backspace to delete and focus previous input\r\n      const newCode = [...code];\r\n      newCode[index] = \"\";\r\n      setCode(newCode);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>, index: number) => {\r\n    if (e.key === \"Backspace\" && code[index] === \"\") {\r\n      // Move focus to the previous input\r\n      if (index > 0) {\r\n        inputRefs.current[index - 1]?.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n  \r\n    // Combine the 6 inputs into a single verification code\r\n    const verificationCode = code.join(\"\"); // Assuming `code` is the state managing the 6 inputs\r\n  \r\n    if (verificationCode.length !== 6) {\r\n      toast.error(\"Please enter a complete 6-digit code.\");\r\n      setIsSubmitting(false);\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response: any = await UserApis.verifyMail({ email, code: verificationCode });\r\n  // console.log(response)\r\n      if (response?.data) {\r\n            dispatch(\r\n                    login({\r\n                      login: response.data.data.user.email,\r\n                      token: response.data.data.token.access_token,\r\n                      id: response.data.data.id,\r\n                      data: response?.data.data.user,\r\n                    })\r\n                  );\r\n        toast.success(response?.message || \"Email verified successfully!\");\r\n        navigate(\"/auth/add-store\"); // Navigate to the next page\r\n        // navigate(\"/auth/choose-profession\"); // Navigate to the next page\r\n      } else {\r\n        toast.error(response?.message || \"Invalid verification code. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error verifying email:\", error);\r\n      toast.error(\"An error occurred. Please try again.\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n  \r\n\r\n  const resendCode = async () => {\r\n    try {\r\n      const response:any = await UserApis.resendVerificationCode({ email });\r\n\r\n      if (response) {\r\n        // console.log(\":Verified\", response.data);\r\n\r\n        toast.success(response?.data?.message || \"Verification code resent successfully!\");\r\n        // navigate(\"/auth/add-store\");\r\n    \r\n      } else {\r\n        toast.error(response?.message || \"Failed to resend the verification code.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error resending code:\", error);\r\n      toast.error(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n    \r\n  return (\r\n    <div>\r\n        <div className='flex justify-center'>\r\n<form onSubmit={handleSubmit} className='mt-10'>\r\n    <div className='flex justify-center'>\r\n    <a href=\"https://myappspace.net/\" rel=\"noreferrer\" target=\"_blank\">\r\n            <img\r\n              src=\"/images/auth/MyAppspace (3).png\"\r\n              className=\"w-[170px] h-full text-center\"\r\n              alt=\"Logo\"\r\n            />\r\n            </a>\r\n</div>\r\n<div className='mt-[60px]'>\r\n<h4 className='text-[#000000] text-[24px] font-[700] text-center'>Verify email</h4>\r\n<h4 className='text-[#969696] text-[16px] font-[500] text-center'>Please check your  mail for a code and input the code here to proceed</h4>\r\n</div>\r\n\r\n<div className='mx-10 my-10'>\r\n    <hr />\r\n</div>\r\n\r\n<div className=\"flex flex-col items-center p-4 \">\r\n      <h2 className=\"text-black font-bold text-lg mb-4\">Verification Code</h2>\r\n      <div className=\"flex gap-2 mb-4\">\r\n\r\n      {/* <input\r\n              type=\"text\"\r\n              id=\"verificationCode\"\r\n              value={verificationCode}\r\n              onChange={(e) => setVerificationCode(e.target.value)}\r\n              className=\"w-12 h-12 text-center text-lg border border-gray-300 rounded-md bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              required\r\n            /> */}\r\n        {code.map((digit, index) => (\r\n          <input\r\n            key={index}\r\n            id={`code-input-${index}`}\r\n            type=\"text\"\r\n            maxLength={1}\r\n            value={digit}\r\n            onChange={(e) => handleChange(e, index)}\r\n            onKeyDown={(e) => handleKeyDown(e, index)}\r\n            className=\"w-12 h-12 text-center text-lg border border-gray-300 rounded-md bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            ref={(el) => (inputRefs.current[index] = el)}\r\n             />\r\n        ))}\r\n      </div>\r\n      <button\r\n         onClick={resendCode}\r\n          className=\"text-blue-600 font-medium hover:underline\"\r\n        >\r\n          Resend verification code\r\n        </button>\r\n      {/* {timer > 0 ? (\r\n        <p className=\"text-red-600 text-sm\">\r\n          Resend verification code ({timer}s)\r\n        </p>\r\n      ) : (\r\n        <button\r\n          onClick={() => setTimer(30)}\r\n          className=\"text-blue-600 font-medium hover:underline\"\r\n        >\r\n          Resend verification code\r\n        </button>\r\n      )} */}\r\n    </div>\r\n\r\n    <div className=\"flex justify-center mt-10\">\r\n    <button\r\n            type=\"submit\"\r\n            // onClick={handleSubmit}\r\n            disabled={isSubmitting}\r\n                        className={`disabled:bg-gray-500  flex gap-2 items-center py-2 w-fit px-6 bg-secondary text-white rounded-full  hover:bg-secondary/[70%]\r\n}`}\r\n                      >\r\n               Proceed\r\n                      <FaArrowRight />\r\n                      </button>\r\n                    </div>\r\n</form>\r\n <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={2000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerifyEmail"],"names":["VerifyEmail","isSubmitting","setIsSubmitting","useState","code","setCode","Array","fill","inputRefs","useRef","dispatch","useDispatch","email","useSelector","state","_state$data","data","login","value","navigate","useNavigate","_jsx","children","_jsxs","className","onSubmit","async","e","preventDefault","verificationCode","join","length","toast","error","response","UserApis","verifyMail","user","token","access_token","id","success","message","console","href","rel","target","src","alt","map","digit","index","concat","type","maxLength","onChange","handleChange","test","newCode","_inputRefs$current","current","focus","onKeyDown","handleKeyDown","_inputRefs$current2","key","ref","el","onClick","resendVerificationCode","_response$data","disabled","FaArrowRight","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}