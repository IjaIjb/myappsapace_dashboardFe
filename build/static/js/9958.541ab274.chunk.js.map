{"version":3,"file":"static/js/9958.541ab274.chunk.js","mappings":"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","sources":["pages/auth/ForgotPassword.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { UserApis } from '../../apis/userApi/userApi';\r\nimport { NavLink } from 'react-router-dom';\r\nimport LoadingSpinner from '../../components/UI/LoadingSpinner';\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { FaArrowRight } from 'react-icons/fa';\r\n\r\nconst images = [\r\n  \"/images/auth/authImage1.svg\",\r\n  \"/images/auth/authImage2.svg\",\r\n  \"/images/auth/authImage3.svg\",\r\n]; // Add more images as needed\r\n\r\nconst ForgotPassword = () => {\r\n    const [index, setIndex] = useState(0);\r\n  \r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        setIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n      }, 3000); // Change image every 3 seconds\r\n  \r\n      return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n  const [userData, setUserdata] = useState({\r\n    'email': \"\",\r\n  });\r\n  \r\n  // const [timer, setTimer] = useState(60);\r\n  \r\n  const [loader, setLoader] = React.useState<any>(false);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    setUserdata({ ...userData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoader(true)\r\n    const formData = new FormData()\r\n    formData.append('email', userData?.email)\r\n    UserApis.forgotPassword(formData).then(\r\n      (response:any) => {\r\n        // console.log(response)\r\n        if (response?.data) {\r\n         \r\n            // console.log(response)\r\n            const newTimerValue = 60;\r\n            // setTimer(newTimerValue);\r\n            localStorage.setItem('resendOTPTimer', String(Math.floor(Date.now() / 1000) + newTimerValue));\r\n            localStorage.setItem('OTPEmail', userData?.email);\r\n\r\n            toast.success(response?.data?.message || \"OTP Sent Successfully\");\r\n            \r\n            navigate('/otp-verify');\r\n            setLoader(false)\r\n          // }\r\n        } \r\n        toast.warn(response?.data?.message || \"error occured\");\r\n          setLoader(false)\r\n\r\n        // toast.success(response?.data?.message);\r\n      }\r\n    ).catch(function (error) {\r\n      setLoader(false)\r\n      toast.warn('Invalid Credentials');\r\n      console.log(error.response.data);\r\n      // toast.error(\"Offfline\");\r\n    }).finally(() => {\r\n      setLoader(false)\r\n      // toast.error(\"No Internet Connection\");\r\n\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n    {/* <!-- Start block --> */}\r\n    <div className=\"p-8\">\r\n    <div className=\"grid md:grid-cols-2 \">\r\n\r\n    <div className=\"h-screen md:block hidden relative overflow-hidden\">\r\n      <AnimatePresence>\r\n        <motion.img\r\n          key={images[index]} // Ensure smooth transition\r\n          src={images[index]}\r\n          alt=\"Auth Image\"\r\n          className=\"h-screen absolute top-0 left-0\"\r\n          initial={{ opacity: 0, scale: 1.1 }}\r\n          animate={{ opacity: 1, scale: 1 }}\r\n          exit={{ opacity: 0, scale: 1.1 }}\r\n          transition={{ duration: 1 }}\r\n        />\r\n      </AnimatePresence>\r\n    </div>\r\n\r\n    <section className=\"bg-[#FBFBFB] min-h-screen pt-16 pb-32 \">\r\n      <div className=\"container flex flex-col md:justify-center mx-auto items-center rounded-lg p-6 md:max-w-3xl\">\r\n\r\n        <div>\r\n          <div className='flex justify-center'>\r\n          <a href=\"https://myappspace.net/\" rel=\"noreferrer\" target=\"_blank\">\r\n            <img\r\n              src=\"/images/auth/MyAppspace (3).png\"\r\n              className=\"w-[170px] h-full\"\r\n              alt=\"Logo\"\r\n            />\r\n            </a>\r\n          </div>\r\n          <h1 className=\"mt-6 text-[#000] lg:text-[32px] text-[28px] font-semibold text-center\"> Forgot Password?</h1>\r\n          <p className='mt-4 text-center text-[#00000080] text-[14px] font-normal'> No worries, weâ€™ll send you reset instructions.</p>\r\n        </div>\r\n\r\n\r\n        <div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"flex flex-col lg:flex-row lg:justify-between max-w-screen-xl mx-auto  mt-5\">\r\n              <div className=\"relative flex flex-col min-w-0 break-words w-full  \">\r\n                <div className=\"flex-auto   py-10 pt-0\">\r\n                  <div className=\"flex flex-wrap \">\r\n                    <div className=\"w-full lg:w-12/12 \">\r\n                      <div className=\"relative w-full mb-6\">\r\n                        <label className=\"block mb-2 text-sm font-semibold text-[#414143]\">\r\n                          Email Address*\r\n                        </label>\r\n                        <input\r\n                          type=\"email\"\r\n                          className=\"bg-[#FBFBFB] border border-[#00000040] text-[#333333] text-sm rounded-[7px] block w-full p-2 placeholder:text-[#00000040] placeholder:text-[12px]  ease-linear transition-all duration-150\"\r\n                          placeholder=\"Enter Email\"\r\n                          name=\"email\"\r\n\r\n                          required\r\n                          onChange={handleChange}\r\n\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex justify-end items-end mt-3 w-full\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={loader}\r\n                      className={`disabled:bg-gray-500  flex gap-2 items-center py-2 w-fit px-6 bg-secondary text-white rounded-full  hover:bg-secondary/[70%]\r\n                        }`}\r\n                      >\r\n                     {loader ? <LoadingSpinner /> : \"Reset Password\"}\r\n                      {!loader && <FaArrowRight />}\r\n\r\n\r\n                    </button>\r\n                    </div>\r\n\r\n                    <NavLink to={\"/\"} className=\"flex justify-center\">\r\n                      {/* <SvgElement type={icontypesEnum.BARS} /> */}\r\n                      <p className=\"text-center text-xs font-semibold text-[#027DCB] mt-1\">\r\n\r\n                        Back to login\r\n\r\n                      </p>\r\n                    </NavLink>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n    </section>\r\n</div>\r\n</div>\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={2000}\r\n      hideProgressBar={true}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover />\r\n\r\n    {/* <!-- End block --> */}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword"],"names":["images","ForgotPassword","index","setIndex","useState","useEffect","interval","setInterval","prevIndex","length","clearInterval","navigate","useNavigate","userData","setUserdata","loader","setLoader","React","_jsxs","_Fragment","children","_jsx","className","AnimatePresence","motion","img","src","alt","initial","opacity","scale","animate","exit","transition","duration","href","rel","target","onSubmit","e","preventDefault","formData","FormData","append","email","UserApis","forgotPassword","then","response","_response$data2","data","_response$data","newTimerValue","localStorage","setItem","String","Math","floor","Date","now","toast","success","message","warn","catch","error","console","log","finally","type","placeholder","name","required","onChange","value","_objectSpread","disabled","LoadingSpinner","FaArrowRight","NavLink","to","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}