{"version":3,"file":"static/js/7955.8af3a618.chunk.js","mappings":"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","sources":["components/UI/LoadingSpinner.tsx","pages/dashboard/store/EditStore.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype Props = {};\r\n\r\nconst LoadingSpinner = (props: Props) => {\r\n  return (\r\n    <svg\r\n      role=\"status\"\r\n      className=\"inline w-5 h-5 mr-2 text-gray-200 animate-spin  fill-gray-600 \"\r\n      viewBox=\"0 0 100 101\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n        fill=\"currentFill\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState } from \"react\";\r\nimport DashboardLayout from \"../../../components/DashboardLayout\";\r\nimport { UserApis } from \"../../../apis/userApi/userApi\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LoadingSpinner from \"../../../components/UI/LoadingSpinner\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst EditStore = () => {\r\n  const params = useParams();\r\n  const [storeId, setStoreId] = useState(\"\");\r\n\r\n  const [storeData, setStoreData] = useState({\r\n    store_name: \"\",\r\n    domain_name: \"\",\r\n    store_abbreviation: \"\",\r\n    industry_type: \"\",\r\n    product_type: \"\",\r\n    store_description: \"\",\r\n    store_location: \"\",\r\n    store_logo: \"\",\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    UserApis.getSingleStore(params?.id).then((response) => {\r\n      if (response?.data) {\r\n        console.log(response.data.store);\r\n        setStoreData(response?.data?.store);\r\n        setStoreId(response?.data?.store?.id);\r\n      }\r\n    });\r\n  }, [params?.id]);\r\n\r\n  console.log(storeData);\r\n  const [storeLogo, setStoreLogo] = useState<File | null>(null); // Store file here\r\n  const [loader, setLoader] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setStoreData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setStoreLogo(file); // Save the file\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n\r\n    // Construct JSON payload\r\n    const payload: Record<string, any> = {\r\n      store_name: storeData.store_name,\r\n      domain_name: storeData.domain_name ? storeData.domain_name : \"\",\r\n      store_abbreviation: storeData.store_abbreviation || \"\",\r\n      industry_type: storeData.industry_type,\r\n      product_type: storeData.product_type,\r\n      store_description: storeData.store_description,\r\n      store_location: storeData.store_location,\r\n      id: storeId,\r\n    };\r\n\r\n    // Handle file upload separately if storeLogo exists\r\n    if (storeLogo) {\r\n      const base64Logo = await toBase64(storeLogo);\r\n      payload.store_logo = base64Logo; // Attach the file as a base64 string\r\n    }\r\n\r\n    try {\r\n      console.log(\"Submitting payload:\", payload);\r\n\r\n      const response: any = await UserApis.updateStore(storeId, payload); // Send JSON payload\r\n      console.log(response);\r\n\r\n      if (response?.status === 200 || response?.status === 201) {\r\n        toast.success(response?.data?.message || \"Store updated successfully!\");\r\n        navigate(\"/dashboard/store\");\r\n      } else {\r\n        toast.error(response?.data?.message || \"Failed to update store.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating store:\", error);\r\n      toast.error(\"An error occurred while updating the store.\");\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  // Function to convert file to base64\r\n  const toBase64 = (file: File): Promise<string> => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result as string);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <div className=\"pt-10 px-5\">\r\n        <h5 className=\"text-[#000000] text-[16px] font-[600]\">\r\n          Business Information\r\n        </h5>\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          className=\"flex flex-col max-w-[570px] mt-5 gap-3\"\r\n        >\r\n          {/* Add Logo */}\r\n          <div>\r\n            <label\r\n              htmlFor=\"store_logo\"\r\n              className=\"text-[#2B2C2B] text-[12px] font-[400]\"\r\n            >\r\n              Add Logo\r\n            </label>\r\n            <div className=\"flex justify-center text-center\">\r\n              <label className=\"flex w-full bg-[#FBFBFF] border border-[#D8D8E2] flex-col items-center justify-center rounded-[5px] cursor-pointer relative\">\r\n                <div className=\"flex flex-col items-center justify-center h-[140px]\">\r\n                  {storeLogo ? ( // Show new selected image first\r\n                    <img\r\n                      src={URL.createObjectURL(storeLogo)}\r\n                      alt=\"Uploaded logo\"\r\n                      width={100}\r\n                      height={100}\r\n                    />\r\n                  ) : storeData?.store_logo ? ( // Show existing store logo if no new file selected\r\n                    <img\r\n                      src={storeData.store_logo}\r\n                      alt=\"Store logo\"\r\n                      width={100}\r\n                      height={100}\r\n                    />\r\n                  ) : (\r\n                    // Show placeholder if no logo exists\r\n                    <div className=\"flex flex-col\">\r\n                      <h4 className=\"text-[#9D9D9D] text-[12px] font-[400]\">\r\n                        Upload Logo Image here\r\n                      </h4>\r\n                      <h4 className=\"text-[#9D9D9D] text-[10px] font-[400]\">\r\n                        Recommended size 32px by 32px\r\n                      </h4>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/x-png,image/gif,image/jpeg\"\r\n                  className=\"hidden mb-2 text-sm text-[#6C757D] font-medium\"\r\n                  onChange={handleImageChange}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Store Name */}\r\n          <div>\r\n            <label\r\n              htmlFor=\"store_name\"\r\n              className=\"text-[#2B2C2B] text-[12px] font-[400]\"\r\n            >\r\n              Store Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"store_name\"\r\n              value={storeData.store_name}\r\n              onChange={handleInputChange}\r\n              className=\"block w-full mt-1 border px-3 py-2 rounded\"\r\n              placeholder=\"Enter store name\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label\r\n              htmlFor=\"domain_name\"\r\n              className=\"text-[#2B2C2B] text-[12px] font-[400]\"\r\n            >\r\n              Domain Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"domain_name\"\r\n              value={storeData.domain_name ? storeData.domain_name : \"\"}\r\n              onChange={handleInputChange}\r\n              className=\"block w-full mt-1 border px-3 py-2 rounded\"\r\n              placeholder=\"Enter domain name\"\r\n              required\r\n            />\r\n          </div>\r\n          {/* Store Abbreviation */}\r\n          <div>\r\n            <label\r\n              htmlFor=\"store_abbreviation\"\r\n              className=\"text-[#2B2C2B] text-[12px] font-[400]\"\r\n            >\r\n              Store Abbreviation\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"store_abbreviation\"\r\n              value={storeData.store_abbreviation}\r\n              onChange={handleInputChange}\r\n              className=\"block w-full mt-1 border px-3 py-2 rounded\"\r\n              placeholder=\"Enter abbreviation\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Industry Type */}\r\n          <div>\r\n            <label\r\n              htmlFor=\"industry_type\"\r\n              className=\"text-[#2B2C2B] text-[12px] font-[400]\"\r\n            >\r\n              Industry Type\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"industry_type\"\r\n              value={storeData.industry_type}\r\n              onChange={handleInputChange}\r\n              className=\"block w-full mt-1 border px-3 py-2 rounded\"\r\n              placeholder=\"E.g., Retail, Fashion\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Product Type */}\r\n          <div>\r\n            <label\r\n              htmlFor=\"product_type\"\r\n              className=\"text-[#2B2C2B] text-[12px] font-[400]\"\r\n            >\r\n              Product Type\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"product_type\"\r\n              value={storeData.product_type}\r\n              onChange={handleInputChange}\r\n              className=\"block w-full mt-1 border px-3 py-2 rounded\"\r\n              placeholder=\"Physical, Digital, Both\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Store Location */}\r\n          <div>\r\n            <label\r\n              htmlFor=\"store_location\"\r\n              className=\"text-[#2B2C2B] text-[12px] font-[400]\"\r\n            >\r\n              Business Location\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"store_location\"\r\n              value={storeData.store_location}\r\n              onChange={handleInputChange}\r\n              className=\"block w-full mt-1 border px-3 py-2 rounded\"\r\n              placeholder=\"Enter business location\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Store Description */}\r\n          <div>\r\n            <label\r\n              htmlFor=\"store_description\"\r\n              className=\"text-[#2B2C2B] text-[12px] font-[400]\"\r\n            >\r\n              Business Description\r\n            </label>\r\n            <textarea\r\n              name=\"store_description\"\r\n              value={storeData.store_description}\r\n              onChange={handleInputChange}\r\n              className=\"block w-full mt-1 border px-3 py-2 rounded\"\r\n              rows={4}\r\n              placeholder=\"Enter a short description\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Submit Button */}\r\n          <div className=\"flex justify-end items-end h-full\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loader}\r\n              className=\"bg-secondary text-white py-2 px-4 rounded hover:bg-green-700 disabled:bg-gray-400\"\r\n            >\r\n              {loader ? <LoadingSpinner /> : \"Proceed\"}\r\n              {!loader && <FaArrowRight />}\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={2000}\r\n          hideProgressBar={true}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default EditStore;\r\n"],"names":["props","_jsxs","role","className","viewBox","fill","xmlns","children","_jsx","d","EditStore","params","useParams","storeId","setStoreId","useState","storeData","setStoreData","store_name","domain_name","store_abbreviation","industry_type","product_type","store_description","store_location","store_logo","React","UserApis","getSingleStore","id","then","response","_response$data","_response$data2","_response$data2$store","data","console","log","store","storeLogo","setStoreLogo","loader","setLoader","navigate","useNavigate","handleInputChange","e","name","value","target","prev","_objectSpread","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","DashboardLayout","onSubmit","async","preventDefault","payload","base64Logo","updateStore","_response$data3","_response$data4","status","toast","success","message","htmlFor","src","URL","createObjectURL","alt","width","height","type","accept","onChange","_e$target$files","files","placeholder","required","rows","disabled","LoadingSpinner","FaArrowRight","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}