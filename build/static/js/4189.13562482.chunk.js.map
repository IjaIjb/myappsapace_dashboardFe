{"version":3,"file":"static/js/4189.13562482.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/capture-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/order.mjs","../node_modules/framer-motion/dist/es/stats/buffer.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/stats/animation-count.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = parent instanceof HTMLElement ? parent.offsetWidth || 0 : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","function capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.target instanceof Element &&\n        actionName in event.target &&\n        event.pointerId !== undefined) {\n        try {\n            event.target[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { capturePointer };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { capturePointer } from '../utils/capture-pointer.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        capturePointer(startEvent, \"set\");\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            capturePointer(endEvent, \"release\");\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.4.7\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            if (event.target instanceof Element &&\n                event.target.hasPointerCapture &&\n                event.pointerId !== undefined) {\n                try {\n                    if (!event.target.hasPointerCapture(event.pointerId)) {\n                        return;\n                    }\n                }\n                catch (e) { }\n            }\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            capturePointer(event, \"release\");\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\" ||\n                event.type === \"lostpointercapture\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        capturePointer(event, \"set\");\n        this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { PanSession } from './PanSession.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.7\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","parent","offsetParent","parentWidth","HTMLElement","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","_ref","anchorX","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","x","concat","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete","subscribe","arguments","useEffect","createContext","transformPagePoint","p","isStatic","reducedMotion","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","_target","isAnimationControls","v","start","getValueState","visualElement","state","getVelocity","resolveVariantFromProps","definition","velocity","variants","resolveVariant","getProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","stop","runAll","filter","Boolean","finished","Promise","all","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","Array","isArray","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","EventTarget","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","_objectSpread","passive","signal","abort","isValidHover","event","pointerType","capturePointer","action","actionName","target","Element","pointerId","isNodeOrChild","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","isOutside","isTrusted","rect","getBoundingClientRect","innerWidth","bottom","innerHeight","clientX","clientY","cancelEvent","addEventListener","canAddKeyboardAccessibility","useGlobalTarget","tagName","tabIndex","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","noop","any","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","step","schedule","queue","process","frameData","frameloop","clear","createRenderStep","read","resolveKeyframes","update","preRender","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","_objectWithoutProperties","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","activeAnimations","layout","mainThread","waapi","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","finally","startWaapiAnimation","pendingTimeline","playbackRate","playState","_this$options2","_excluded2","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","mount","prevAnimate","unmount","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","isRefObject","PanSession","handlers","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","hasPointerCapture","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","updateDimensions","createDomVisualElement","motion","useLayoutEffect"],"sourceRoot":""}